{
  "app_name": "initiad",
  "app_version": "v0.5.1",
  "genesis_time": "2024-09-20T04:11:43.938348177Z",
  "chain_id": "initiation-2",
  "initial_height": 1,
  "app_hash": null,
  "app_state": {
    "06-solomachine": null,
    "07-tendermint": null,
    "auction": {
      "params": {
        "max_bundle_size": 2,
        "escrow_account_address": "lUgrolt78Xjd4S2z/yDwDpD60Ak=",
        "reserve_fee": {
          "denom": "uinit",
          "amount": "1"
        },
        "min_bid_increment": {
          "denom": "uinit",
          "amount": "1"
        },
        "front_running_protection": true,
        "proposer_fee": "0.000000000000000000"
      }
    },
    "auth": {
      "params": {
        "max_memo_characters": "256",
        "tx_sig_limit": "7",
        "tx_size_cost_per_byte": "10",
        "sig_verify_cost_ed25519": "590",
        "sig_verify_cost_secp256k1": "1000"
      },
      "accounts": [
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init10jqqj8cswcraswmd5pqka7qj5d4k2ghc6rc6xe",
          "pub_key": null,
          "account_number": "0",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.ModuleAccount",
          "base_account": {
            "address": "init1w6t0l7z0yerj49ehnqwqaayxqpe3u7e2l0dmsl",
            "pub_key": null,
            "account_number": "1",
            "sequence": "0"
          },
          "name": "reward",
          "permissions": []
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1vdppss665svjqyhlkzpqmsc43y7d6gcg83fr3q",
          "pub_key": null,
          "account_number": "2",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1wgl839zxdh5c89mvc4ps97wyx6ejjygxs4qmcx",
          "pub_key": null,
          "account_number": "3",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1m39sf52nkhnmavy40tv99sxyzj0lh7zlwsn6tc",
          "pub_key": null,
          "account_number": "4",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1dn83e4adyyh9905qh24nf9704xu2wcy8gndtnw",
          "pub_key": null,
          "account_number": "5",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1vcqpvk72jcus3th8ndhwrthqcqvl0p0hm0a4wf",
          "pub_key": null,
          "account_number": "6",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1rcyxrkkkddnml5c422lj0360vlslhzpvcsnf4z",
          "pub_key": null,
          "account_number": "7",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1agmhdnvghz9c346frdm9r3w3r2l97pu7cvtplr",
          "pub_key": null,
          "account_number": "8",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init17vjt7ne4t2lvd4ylmlgdg4qeh2vaxc7ec7kgn8",
          "pub_key": null,
          "account_number": "9",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1yj57c9yjheslk6pjxm3p6uwvca4je04f9qw3uk",
          "pub_key": null,
          "account_number": "10",
          "sequence": "0"
        },
        {
          "@type": "/cosmos.auth.v1beta1.BaseAccount",
          "address": "init1atusrr8dzjhyrvvz7hzx0px7smft8yvg8hr270",
          "pub_key": null,
          "account_number": "11",
          "sequence": "0"
        }
      ]
    },
    "authz": {
      "authorization": []
    },
    "bank": {
      "params": {
        "send_enabled": [],
        "default_send_enabled": true
      },
      "balances": [
        {
          "address": "init1rcyxrkkkddnml5c422lj0360vlslhzpvcsnf4z",
          "coins": [
            {
              "denom": "uinit",
              "amount": "10000000000"
            }
          ]
        },
        {
          "address": "init1yj57c9yjheslk6pjxm3p6uwvca4je04f9qw3uk",
          "coins": [
            {
              "denom": "uinit",
              "amount": "10000000000"
            }
          ]
        },
        {
          "address": "init1vdppss665svjqyhlkzpqmsc43y7d6gcg83fr3q",
          "coins": [
            {
              "denom": "ueth",
              "amount": "1000000000000000"
            },
            {
              "denom": "uinit",
              "amount": "599999900000000"
            },
            {
              "denom": "utia",
              "amount": "1000000000000000"
            },
            {
              "denom": "uusdc",
              "amount": "1000000000000000"
            }
          ]
        },
        {
          "address": "init1vcqpvk72jcus3th8ndhwrthqcqvl0p0hm0a4wf",
          "coins": [
            {
              "denom": "uinit",
              "amount": "10000000000"
            }
          ]
        },
        {
          "address": "init1dn83e4adyyh9905qh24nf9704xu2wcy8gndtnw",
          "coins": [
            {
              "denom": "uinit",
              "amount": "10000000000"
            }
          ]
        },
        {
          "address": "init1wgl839zxdh5c89mvc4ps97wyx6ejjygxs4qmcx",
          "coins": [
            {
              "denom": "uinit",
              "amount": "10000000000"
            }
          ]
        },
        {
          "address": "init1w6t0l7z0yerj49ehnqwqaayxqpe3u7e2l0dmsl",
          "coins": [
            {
              "denom": "uinit",
              "amount": "400000000000000"
            }
          ]
        },
        {
          "address": "init10jqqj8cswcraswmd5pqka7qj5d4k2ghc6rc6xe",
          "coins": [
            {
              "denom": "uinit",
              "amount": "100000000"
            }
          ]
        },
        {
          "address": "init1m39sf52nkhnmavy40tv99sxyzj0lh7zlwsn6tc",
          "coins": [
            {
              "denom": "uinit",
              "amount": "10000000000"
            }
          ]
        },
        {
          "address": "init1agmhdnvghz9c346frdm9r3w3r2l97pu7cvtplr",
          "coins": [
            {
              "denom": "uinit",
              "amount": "10000000000"
            }
          ]
        },
        {
          "address": "init1atusrr8dzjhyrvvz7hzx0px7smft8yvg8hr270",
          "coins": [
            {
              "denom": "uinit",
              "amount": "10000000000"
            }
          ]
        },
        {
          "address": "init17vjt7ne4t2lvd4ylmlgdg4qeh2vaxc7ec7kgn8",
          "coins": [
            {
              "denom": "uinit",
              "amount": "10000000000"
            }
          ]
        }
      ],
      "supply": [],
      "denom_metadata": [],
      "send_enabled": []
    },
    "capability": {
      "index": "1",
      "owners": []
    },
    "consensus": null,
    "crisis": {
      "constant_fee": {
        "denom": "uinit",
        "amount": "1000"
      }
    },
    "distribution": {
      "params": {
        "community_tax": "0.020000000000000000",
        "withdraw_addr_enabled": true,
        "reward_weights": [
          {
            "denom": "uinit",
            "weight": "1.000000000000000000"
          }
        ]
      },
      "fee_pool": {
        "community_pool": []
      },
      "delegator_withdraw_infos": [],
      "previous_proposer": "",
      "outstanding_rewards": [],
      "validator_accumulated_commissions": [],
      "validator_historical_rewards": [],
      "validator_current_rewards": [],
      "delegator_starting_infos": [],
      "validator_slash_events": []
    },
    "evidence": {
      "evidence": []
    },
    "feegrant": {
      "allowances": []
    },
    "feeibc": {
      "identified_fees": [],
      "fee_enabled_channels": [],
      "registered_payees": [],
      "registered_counterparty_payees": [],
      "forward_relayers": []
    },
    "forwarding": {
      "allowed_denoms": [
        "*"
      ],
      "num_of_accounts": {},
      "num_of_forwards": {},
      "total_forwarded": {}
    },
    "genutil": {
      "gen_txs": [
        {
          "body": {
            "messages": [
              {
                "@type": "/initia.mstaking.v1.MsgCreateValidator",
                "description": {
                  "moniker": "node0",
                  "identity": "",
                  "website": "",
                  "security_contact": "",
                  "details": ""
                },
                "commission": {
                  "rate": "0.100000000000000000",
                  "max_rate": "1.000000000000000000",
                  "max_change_rate": "0.010000000000000000"
                },
                "validator_address": "initvaloper10jqqj8cswcraswmd5pqka7qj5d4k2ghcwxprgf",
                "pubkey": {
                  "@type": "/cosmos.crypto.ed25519.PubKey",
                  "key": "QTH48iEctfhTwBT1BuGAhwEg8oVO/43rhxEaRNageTA="
                },
                "amount": [
                  {
                    "denom": "uinit",
                    "amount": "100000000"
                  }
                ]
              }
            ],
            "memo": "3715cdb41efb45714eb534c3943c5947f4894787@10.10.0.25:26656",
            "timeout_height": "0",
            "extension_options": [],
            "non_critical_extension_options": []
          },
          "auth_info": {
            "signer_infos": [
              {
                "public_key": {
                  "@type": "/cosmos.crypto.secp256k1.PubKey",
                  "key": "A5MgYbUu2K3vLsdTGZOvM3tVA4apc55i4TPRfB8h2go4"
                },
                "mode_info": {
                  "single": {
                    "mode": "SIGN_MODE_DIRECT"
                  }
                },
                "sequence": "0"
              }
            ],
            "fee": {
              "amount": [],
              "gas_limit": "200000",
              "payer": "",
              "granter": ""
            },
            "tip": null
          },
          "signatures": [
            "W9dgSdP6JHuVM4M8N2F1EKpmFVCr0xN/gUWxlRe65u0BYp2A9tSlN5lqEH3wPQ+fviECnxIZp0oaArRvoDwKHg=="
          ]
        }
      ]
    },
    "gov": {
      "starting_proposal_id": "1",
      "deposits": [],
      "votes": [],
      "proposals": [],
      "params": {
        "min_deposit": [
          {
            "denom": "uinit",
            "amount": "10000000"
          }
        ],
        "max_deposit_period": "172800s",
        "voting_period": "172800s",
        "quorum": "0.334000000000000000",
        "threshold": "0.500000000000000000",
        "veto_threshold": "0.334000000000000000",
        "min_initial_deposit_ratio": "0.000000000000000000",
        "proposal_cancel_ratio": "0.500000000000000000",
        "proposal_cancel_dest": "",
        "expedited_voting_period": "86400s",
        "expedited_threshold": "0.667000000000000000",
        "expedited_min_deposit": [
          {
            "denom": "uinit",
            "amount": "50000000"
          }
        ],
        "burn_vote_quorum": false,
        "burn_proposal_deposit_prevote": false,
        "burn_vote_veto": true,
        "min_deposit_ratio": "0.010000000000000000",
        "emergency_min_deposit": [
          {
            "denom": "uinit",
            "amount": "100000000"
          }
        ],
        "emergency_tally_interval": "300s",
        "low_threshold_functions": [
          "0x1::vip::register_snapshot"
        ],
        "vesting": null
      },
      "constitution": ""
    },
    "group": {
      "group_seq": "0",
      "groups": [],
      "group_members": [],
      "group_policy_seq": "0",
      "group_policies": [],
      "proposal_seq": "0",
      "proposals": [],
      "votes": []
    },
    "ibc": {
      "client_genesis": {
        "clients": [],
        "clients_consensus": [],
        "clients_metadata": [],
        "params": {
          "allowed_clients": [
            "*"
          ]
        },
        "create_localhost": false,
        "next_client_sequence": "0"
      },
      "connection_genesis": {
        "connections": [],
        "client_connection_paths": [],
        "next_connection_sequence": "0",
        "params": {
          "max_expected_time_per_block": "30000000000"
        }
      },
      "channel_genesis": {
        "channels": [],
        "acknowledgements": [],
        "commitments": [],
        "receipts": [],
        "send_sequences": [],
        "recv_sequences": [],
        "ack_sequences": [],
        "next_channel_sequence": "0",
        "params": {
          "upgrade_timeout": {
            "height": {
              "revision_number": "0",
              "revision_height": "0"
            },
            "timestamp": "600000000000"
          }
        }
      }
    },
    "ibchooks": {
      "params": {
        "default_allowed": false
      },
      "acls": []
    },
    "interchainaccounts": {
      "controller_genesis_state": {
        "active_channels": [],
        "interchain_accounts": [],
        "ports": [],
        "params": {
          "controller_enabled": true
        }
      },
      "host_genesis_state": {
        "active_channels": [],
        "interchain_accounts": [],
        "port": "icahost",
        "params": {
          "host_enabled": true,
          "allow_messages": [
            "/cosmos.authz.v1beta1.MsgExec",
            "/cosmos.authz.v1beta1.MsgGrant",
            "/cosmos.authz.v1beta1.MsgRevoke",
            "/cosmos.bank.v1beta1.MsgSend",
            "/cosmos.bank.v1beta1.MsgMultiSend",
            "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress",
            "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission",
            "/cosmos.distribution.v1beta1.MsgFundCommunityPool",
            "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward",
            "/cosmos.feegrant.v1beta1.MsgGrantAllowance",
            "/cosmos.feegrant.v1beta1.MsgRevokeAllowance",
            "/cosmos.gov.v1.MsgVoteWeighted",
            "/cosmos.gov.v1.MsgSubmitProposal",
            "/cosmos.gov.v1.MsgDeposit",
            "/cosmos.gov.v1.MsgVote",
            "/cosmos.group.v1.MsgCreateGroup",
            "/cosmos.group.v1.MsgCreateGroupPolicy",
            "/cosmos.group.v1.MsgExec",
            "/cosmos.group.v1.MsgLeaveGroup",
            "/cosmos.group.v1.MsgSubmitProposal",
            "/cosmos.group.v1.MsgUpdateGroupAdmin",
            "/cosmos.group.v1.MsgUpdateGroupMember",
            "/cosmos.group.v1.MsgUpdateGroupPolicyAdmin",
            "/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy",
            "/cosmos.group.v1.MsgVote",
            "/cosmos.group.v1.MsgWithdrawProposal",
            "/initia.mstaking.v1.MsgEditValidator",
            "/initia.mstaking.v1.MsgDelegate",
            "/initia.mstaking.v1.MsgUndelegate",
            "/initia.mstaking.v1.MsgBeginRedelegate",
            "/initia.mstaking.v1.MsgCreateValidator",
            "/ibc.applications.transfer.v1.MsgTransfer",
            "/ibc.applications.nft_transfer.v1.MsgTransfer",
            "/initia.move.v1.MsgPublish",
            "/initia.move.v1.MsgExecute",
            "/initia.move.v1.MsgScript"
          ]
        }
      }
    },
    "intertx": null,
    "marketmap": {
      "market_map": {
        "markets": {
          "AAVE/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "AAVE",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "mexc_ws",
                "off_chain_ticker": "AAVEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "aaveusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "AAVEUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "AAVE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "AAVE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "binance_api",
                "off_chain_ticker": "AAVEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "AAVE-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ADA/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ADA",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ADAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ADAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ADA-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ADA_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "adausdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "ADAUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ADA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ADAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ADA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "AEVO/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "AEVO",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "AEVOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "AEVOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "AEVO_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "AEVOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "AEVO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "AGIX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "AGIX",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "AGIXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "AGIXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "AGIX_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "AGIX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "AGIX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "AGIXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ALGO/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ALGO",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ALGOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ALGOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ALGO-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "ALGOUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ALGO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ALGOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ALGO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "APE/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "APE",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "APEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "APE-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "APE_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "APEUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "APE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "APEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "APE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "APT/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "APT",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "APTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "APTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "APT-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "APT_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "aptusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "APT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "APTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "APT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ARB/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ARB",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ARBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ARBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ARB-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ARB_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "arbusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ARB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ARBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ARB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ARKM/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ARKM",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ARKMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ARKMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ARKM_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ARKM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ARKMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ASTR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ASTR",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ASTRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ASTR_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "ASTRUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ASTR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ASTRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ASTR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ATOM/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ATOM",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ATOMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ATOMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ATOM-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ATOM_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "ATOMUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ATOM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ATOMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ATOM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "AVAX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "AVAX",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "AVAXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "AVAXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "AVAX-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "AVAX_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "avaxusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "AVAXUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "AVAX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "AVAX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "AXL/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "AXL",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "AXLUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "AXLUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "AXL-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "WAXL_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "WAXLUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "BCH/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "BCH",
                "Quote": "USD"
              },
              "decimals": "7",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "BCHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "BCHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "BCH-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "BCH_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "bchusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "BCHUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BCH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "BCHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "BCH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "BLUR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "BLUR",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "coinbase_api",
                "off_chain_ticker": "BLUR-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "BLUR_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "BLURUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BLUR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "BLURUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "BLUR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "BNB/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "BNB",
                "Quote": "USD"
              },
              "decimals": "7",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "okx_ws",
                "off_chain_ticker": "BNB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BNB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "BNBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "binance_api",
                "off_chain_ticker": "BNBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "BNBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "BNB_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "BONK/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "BONK",
                "Quote": "USD"
              },
              "decimals": "14",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "BONKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "BONKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "BONK-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BONK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "BONK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "BONKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "BTC/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "BTC",
                "Quote": "USD"
              },
              "decimals": "5",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "BTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "BTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "BTC-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "btcusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XXBTZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BTC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "BTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "BTC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "COMP/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "COMP",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "COMPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "COMP-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "COMP_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "COMPUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "COMPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "COMP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "CRV/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "CRV",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "CRVUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "CRV-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "CRV_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "CRVUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "CRV-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "CRVUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "CRV-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "DOGE/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "DOGE",
                "Quote": "USD"
              },
              "decimals": "11",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "DOGEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "DOGEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "DOGE-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "DOGE_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "dogeusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XDGUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "DOGE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "DOGEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "DOGE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "DOT/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "DOT",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "DOTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "DOTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "DOT-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "DOT_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "DOTUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "DOT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "DOTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "DOT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "DYDX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "DYDX",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "DYDXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "DYDXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "DYDX_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "DYDX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "DYDXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "DYDX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "DYM/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "DYM",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "DYMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "DYMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "DYM_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "DYM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "DYMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "EOS/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "EOS",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "EOSUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "EOSUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "EOS-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "EOS_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "EOSUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "EOS-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "EOS-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "EOSUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ETC/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ETC",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ETCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ETC-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ETC_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "etcusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ETC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ETCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ETC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ETH/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ETH",
                "Quote": "USD"
              },
              "decimals": "6",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ETHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ETHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ETH-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "ethusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XETHZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ETH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ETHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ETH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "FET/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "FET",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "FETUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "FET-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "FETUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "FET-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "FET-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "FETUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "FIL/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "FIL",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "FILUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "FIL-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "FIL_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "filusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "FILUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "FILUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "FIL-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "GRT/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "GRT",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "GRTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "GRTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "GRT-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "GRT_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "GRTUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "GRT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "GRTUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "GRT-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "HBAR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "HBAR",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "HBARUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bitstamp_ws",
                "off_chain_ticker": "hbarusd",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "HBARUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "HBAR-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "HBAR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "HBARUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "HBAR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ICP/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ICP",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ICPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ICPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "ICP-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "ICPUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ICP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ICP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ICPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "IMX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "IMX",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "IMXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "IMX-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "IMXUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "IMX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "IMXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "IMX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "INJ/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "INJ",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "INJUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "INJUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "INJ-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "INJUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "INJ-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "INJ-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "INJUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "JTO/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "JTO",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "coinbase_api",
                "off_chain_ticker": "JTO-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "binance_api",
                "off_chain_ticker": "JTOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "JTOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "JTOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "JTO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "JTO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "JUP/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "JUP",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "JUP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "JUP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "binance_api",
                "off_chain_ticker": "JUPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "JUPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "JUP_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "JUPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "LDO/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "LDO",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "LDOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "LDO-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "LDOUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "LDO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "LDOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "LDO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "LINK/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "LINK",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "LINKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "LINKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "LINK-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "LINKUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "LINK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "LINKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "LINK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "LTC/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "LTC",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "LTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "LTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "LTC-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "ltcusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XLTCZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "LTC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "LTCUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "LTC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "MANA/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "MANA",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "MANAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "MANA-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "MANA_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "MANAUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "MANA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "MANAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "MANA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "MATIC/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "MATIC",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "MATICUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "MATICUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "MATIC-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "MATIC_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "maticusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "MATICUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "MATIC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "MATICUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "MATIC-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "MKR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "MKR",
                "Quote": "USD"
              },
              "decimals": "6",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "MKRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "MKR-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "MKRUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "MKR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "MKRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "MKR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "NEAR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "NEAR",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "NEARUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "NEAR-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "NEAR_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "nearusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "NEAR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "NEARUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "NEAR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "NTRN/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "NTRN",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "2",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "NTRNUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "NTRN_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "NTRN-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "NTRN-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "OP/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "OP",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "OPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "OP-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "OP_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "OP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "OPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "OP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "ORDI/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "ORDI",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "ORDIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "ORDIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "ORDI_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "ordiusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "ORDI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "ORDI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "ORDIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "PEPE/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "PEPE",
                "Quote": "USD"
              },
              "decimals": "16",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "PEPEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "PEPEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "PEPE_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "PEPEUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "PEPE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "PEPEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "PEPE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "PYTH/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "PYTH",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "PYTHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "PYTHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "PYTH_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "PYTH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "PYTH-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "PYTHUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "RNDR/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "RNDR",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "RNDRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "RNDR-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "RNDRUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "RNDR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "RNDR-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "RNDRUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "RUNE/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "RUNE",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "RUNEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "RUNE_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "RUNEUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "RUNE-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "RUNEUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "SEI/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "SEI",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "SEIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "SEIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "SEI-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "SEI_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "seiusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "SEI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "SEIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "SHIB/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "SHIB",
                "Quote": "USD"
              },
              "decimals": "15",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "SHIBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "SHIBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "SHIB-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "SHIB_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "SHIBUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "SHIB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "SHIBUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "SHIB-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "SNX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "SNX",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "SNXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "SNXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "SNX-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "SNXUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "SNXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "SNX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "SOL/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "SOL",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "SOLUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "SOLUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "SOL-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "solusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "SOLUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "SOL-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "SOLUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "SOL-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "STRK/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "STRK",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "STRKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "STRKUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "STRKUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "STRK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "STRK-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "STRK_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "STX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "STX",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "STXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "STXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "STX-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "STX_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "STXUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "STX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "STX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "STXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "SUI/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "SUI",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "SUIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "SUIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "SUI-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "SUI_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "suiusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "SUI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "SUIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "SUI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "TIA/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "TIA",
                "Quote": "USD"
              },
              "decimals": "8",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "TIAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "TIAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "TIA-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "tiausdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "TIAUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "TIA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "TIAUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "TIA-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "TRX/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "TRX",
                "Quote": "USD"
              },
              "decimals": "11",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "TRXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "TRXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "TRX_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "trxusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "TRXUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "TRX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "TRXUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "TRX-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "UNI/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "UNI",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "UNIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "UNIUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "UNI-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "UNI_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "UNIUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "UNI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "UNI-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "USDT/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "USDT",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "1",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "USDCUSDT",
                "normalize_by_pair": null,
                "invert": true,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "USDCUSDT",
                "normalize_by_pair": null,
                "invert": true,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "USDT-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "ethusdt",
                "normalize_by_pair": {
                  "Base": "ETH",
                  "Quote": "USD"
                },
                "invert": true,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "USDTZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "BTC-USDT",
                "normalize_by_pair": {
                  "Base": "BTC",
                  "Quote": "USD"
                },
                "invert": true,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "USDC-USDT",
                "normalize_by_pair": null,
                "invert": true,
                "metadata_JSON": ""
              }
            ]
          },
          "WLD/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "WLD",
                "Quote": "USD"
              },
              "decimals": "9",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "WLDUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "WLDUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "WLD_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "wldusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "WLD-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "WLDUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "WLD-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "WOO/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "WOO",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "WOOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "WOO_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "WOO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "WOO-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "WOOUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "XLM/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "XLM",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "XLMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "XLMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "XLM-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XXLMZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "XLM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "XLMUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "XLM-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          },
          "XRP/USD": {
            "ticker": {
              "currency_pair": {
                "Base": "XRP",
                "Quote": "USD"
              },
              "decimals": "10",
              "min_provider_count": "3",
              "enabled": true,
              "metadata_JSON": ""
            },
            "provider_configs": [
              {
                "name": "binance_api",
                "off_chain_ticker": "XRPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "bybit_ws",
                "off_chain_ticker": "XRPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "coinbase_api",
                "off_chain_ticker": "XRP-USD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "gate_ws",
                "off_chain_ticker": "XRP_USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "huobi_ws",
                "off_chain_ticker": "xrpusdt",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kraken_api",
                "off_chain_ticker": "XXRPZUSD",
                "normalize_by_pair": null,
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "kucoin_ws",
                "off_chain_ticker": "XRP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "mexc_ws",
                "off_chain_ticker": "XRPUSDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              },
              {
                "name": "okx_ws",
                "off_chain_ticker": "XRP-USDT",
                "normalize_by_pair": {
                  "Base": "USDT",
                  "Quote": "USD"
                },
                "invert": false,
                "metadata_JSON": ""
              }
            ]
          }
        }
      },
      "last_updated": "0",
      "params": {
        "market_authorities": [
          "init1xhnq6h3v9mwy8mkezxj0nycvm85fnhnuq9ss23"
        ],
        "admin": "init1xhnq6h3v9mwy8mkezxj0nycvm85fnhnuq9ss23"
      }
    },
    "move": {
      "params": {
        "base_denom": "uinit",
        "base_min_gas_price": "0.015000000000000000",
        "contract_shared_revenue_ratio": "0.500000000000000000",
        "script_enabled": true,
        "allowed_publishers": []
      },
      "execution_counter": "0",
      "stdlibs": [
        "oRzrCwYAAAALAQAEAgQEAwiCAQWKATAHugHUBAiOBiAQrgbNAgr7CAsMhgnsBA3yDQgP+g0GAAAACAABAwAABgABAAAHAAIAAQkCAgAACgQCAAALAAMAAAwGAAAADQACAAAOAAgAAA8AAgAAEAAJAAARAAoAABIAAgABEwICAAAUDAIAABUAAgAAFgwCAAAXAAkAABgMCQAABQAJAAAZDAkAABoACQAAGwwJAAAcAAkAAB0MCQAAHgAJAAAfDAkAAQUFAQMDAgEBAwADBQMCAwECAwEKAgYCAwMBAgMBDAEBAgEIAAIDAQEGCAADAgECB2FjY291bnQLQWNjb3VudEluZm8OYWNjb3VudF9udW1iZXIPc2VxdWVuY2VfbnVtYmVyDGFjY291bnRfdHlwZQppc19ibG9ja2VkDGFjY291bnRfaW5mbw5jcmVhdGVfYWNjb3VudAVlcnJvcg5hbHJlYWR5X2V4aXN0cxZyZXF1ZXN0X2NyZWF0ZV9hY2NvdW50FWNyZWF0ZV9hY2NvdW50X3NjcmlwdA5jcmVhdGVfYWRkcmVzcxVjcmVhdGVfb2JqZWN0X2FjY291bnQNY3JlYXRlX3NpZ25lchRjcmVhdGVfdGFibGVfYWNjb3VudAlleGlzdHNfYXQQZ2V0X2FjY291bnRfaW5mbxJnZXRfYWNjb3VudF9udW1iZXIJbm90X2ZvdW5kHGdldF9hY2NvdW50X251bWJlcl93aXRoX2luZm8TZ2V0X3NlcXVlbmNlX251bWJlch1nZXRfc2VxdWVuY2VfbnVtYmVyX3dpdGhfaW5mbw9pc19iYXNlX2FjY291bnQZaXNfYmFzZV9hY2NvdW50X3dpdGhfaW5mbxRpc19ibG9ja2VkX3dpdGhfaW5mbxFpc19tb2R1bGVfYWNjb3VudBtpc19tb2R1bGVfYWNjb3VudF93aXRoX2luZm8RaXNfb2JqZWN0X2FjY291bnQbaXNfb2JqZWN0X2FjY291bnRfd2l0aF9pbmZvEGlzX3RhYmxlX2FjY291bnQaaXNfdGFibGVfYWNjb3VudF93aXRoX2luZm8FdGFibGUGb2JqZWN0B3N0YWtpbmcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARRjb21waWxhdGlvbl9tZXRhZGF0YQkAAzIuMAMyLjAT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CgAuCgIRAQQ9CgIKARcMAwoACwMRBAVECgIKARcMAwoACwMRBgsCBgEAAAAAAAAAFgwCBUoFSwUoCgAQARQLARcMAgoAEAEUDAEKAgsBIwRhCgAKAhEGCwIGAQAAAAAAAAAWDAIFZAsAAQVlBVECBgEAAAkaCgEMAgoAEABBAgwDCwILAyMECwUPCwABBgAAAgAAAAAAJwsADwALAUMCCQwEDAULBAsFFQIAAQAAAA==",
        "oRzrCwYAAAAHAQACAwIPBREGBxdKCGEgEIEBcgzzARwAAAABAAEAAAIAAgAAAwACAAACAwMBAwVibG9jaw5nZXRfYmxvY2tfaW5mbxhnZXRfY3VycmVudF9ibG9ja19oZWlnaHQbZ2V0X2N1cnJlbnRfYmxvY2tfdGltZXN0YW1wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUY29tcGlsYXRpb25fbWV0YWRhdGEJAAMyLjADMi4wE2luaXRpYTo6bWV0YWRhdGFfdjA+AAACGGdldF9jdXJyZW50X2Jsb2NrX2hlaWdodAEBABtnZXRfY3VycmVudF9ibG9ja190aW1lc3RhbXABAQAAAQIAAQEAAAIDEQABAgIBAAACBREADAABCwACAA==",
        "oRzrCwYAAAANAQAIAggYAyBiBIIBDgWQAXkHiQKWAgifBCAQvwRYCpcFFQusBQgMtAX4Ag2sCAgOtAgIAAAACwAOABAAAQMBAAEAAwgBAAEABAgBAAEABgIBAAEABwABAQAACAMEAQAACQAGAQAACgcFAQIBDAgJAQAADQAFAQACDwMEAAMRCgoAABIMBQEAABMOBAEAABQPBQECARUIEAEAARYRAgEAABcTBQEAABgUBAEAAxkKCgADGgoKAAECBAIDBAsCDAIKBAQEAgYMBgkAAQsAAQkAAQkAAQYMAQUAAQsDAQkAAgcKCQAJAAIGCgkABgkAAQEBAwELAgEJAAMLAAEJAAYJAAYMAgULAQEJAAILAwEJAAYJAAIHCgkABgkAAgEDAgcKCQADAgMBAwsAAQkABgkABQILAAEJAAYJAAIFBQpjYXBhYmlsaXR5A0NhcARyb290EENhcERlbGVnYXRlU3RhdGUIQ2FwU3RhdGUJZGVsZWdhdGVzCUxpbmVhckNhcAdhY3F1aXJlEHZhbGlkYXRlX2FjcXVpcmUOYWNxdWlyZV9saW5lYXILYWRkX2VsZW1lbnQGdmVjdG9yCGNvbnRhaW5zBmNyZWF0ZQZzaWduZXIKYWRkcmVzc19vZgVlcnJvcg5hbHJlYWR5X2V4aXN0cwhkZWxlZ2F0ZRBsaW5lYXJfcm9vdF9hZGRyDnJlbW92ZV9lbGVtZW50CGluZGV4X29mBnJlbW92ZQZyZXZva2UJcm9vdF9hZGRyDWludmFsaWRfc3RhdGUJbm90X2ZvdW5kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUY29tcGlsYXRpb25fbWV0YWRhdGEJAAMyLjADMi4wE2luaXRpYTo6bWV0YWRhdGFfdjAkAgAAAAAAAAAABEVDQVAAAQAAAAAAAAAJRURFTEVHQVRFAAAAAAIBAgUBAgECBQICAQUKBQMCAQIFAAIDAgICAQIAAQACAQIFBgsAOAALAQE5AAICAQACAQIFBgsAOAALAQE5AQIDAAAABQwKAC4OATgBAwkLAAsBRAIFCwsAAQIFAQAACxMKABEGCwEBOwIDBwUMCwABBgAAAAAAAAAAEQcnQAQAAAAAAAAAADkCDAILAAsCPwICCAEAAQINGwoCEQYLAQEMAwoDOwMECwsCAQIOADcAFDkDDAQLAgsEPwMOADcAFDwCNgELAzgCAgkBAAAFBg4ACwEBNwIUAgoAAAASDgoALgsBOAMMAgQLCwALAjgEAQUNCwABAg0BAAIBAgUSCgI7AwsBAQMGAgoCPgM6Aw4ANwAUPAI2AQ4COAUBAg4BAAAFBg4ACwEBNwAUAgEAAAIBAhUoCwARBgwBCgE7AwQdCgE9AzcDFAwCCgI7AgQPBRIGAQAAAAAAAAARDycKAj0CNwEOATgGBBkFHAYBAAAAAAAAABEPJwUmCgE7AgQhBSQGAAAAAAAAAAARECcLAQwCCwICAAACAAMAAQAAAgECAgIDAgA=",
        "oRzrCwYAAAAMAQAUAhQ4A0y6AQSGAiAFpgLpAgePBdoECOkJIAaJCiIQqwrzBQqeECAMvhDQBw2OGAgAAAAEAAYADwASABUAHQAgACQAMgABCAABAwQCAwEAAQIFBwAABwcAAAkGAAALCAAFFwcCAAAAAAYcBwEAAQgmBwEAAAEoAgIDAQABAAwAAQAADgIAAAMQBAUBAAMRBgUBAAQTBwcAABQJAAAFFgALAgQEBRgNBQIEBAUZDgACBAQAGhAFAAAbEQAABh4TAwEIBB8HBwAHIRQDAAYiFQUBCAQjBwcACCUAFgEAAScYGQIDAAEpGQUCAwABKhkaAgMAACsHAAAALB0AAAEtAB4CAwQBGR8AAgMAAC4gAAAALxQAAAAwIwAAARElBQIDAAExJicCAwAJMykAAQIANCoAAAANAAcAAgMDAwYKBwoICgsSDhIQDBEXEhcTFxYXFxcbFxwXHSgAAQoFAgYKBQUBBQEGCgkAAQECBgoJAAYJAAEDAgEGBQEGCggCAggCAQELBgIJAAkBAQgCAgYLBgIJAAkBBgkAAwcLBgIJAAkBCQAJAQULBgIIAgEDAwYIAgMCAgICBgwLBwEIAAEIAAEGCwcBCQABBgwCCwcBCQAFAQsIAQkAAggCCAMEBwsBAgkACQELCAEJAAsIAQkAAgEHCwkCCQAJAQIJAAcJAQcFCwcBCAAFBwsJAggCCAMCBwgDBwIBBwgFAwYMCggCCgUBCwECCQAJAQMHCwECCQAJAQkACQECBgwKBQoGCggCCwECCAIIAwMDBwsBAggCCAMGCAIIAwgCAwgAAQgFBAYMCggCCgoCAgEKAgIGCwECCQAJAQkAAgcLAQIJAAkBCQABBwkBAQgEAQkAAwUKCAIKCgISBgoIAgcIBQIBBgoFBQYMCAAHCwECCAIIAwMDAwYIAggCBwgDBwIIAwMBBwoFBGNvZGUNTWV0YWRhdGFTdG9yZQhtZXRhZGF0YQVUYWJsZQV0YWJsZQZTdHJpbmcGc3RyaW5nDk1vZHVsZU1ldGFkYXRhDnVwZ3JhZGVfcG9saWN5FE1vZHVsZVB1Ymxpc2hlZEV2ZW50CW1vZHVsZV9pZAtNb2R1bGVTdG9yZRJhbGxvd2VkX3B1Ymxpc2hlcnMNdG90YWxfbW9kdWxlcw5hc3NlcnRfYWxsb3dlZAZ2ZWN0b3IIaXNfZW1wdHkIY29udGFpbnMFZXJyb3IQaW52YWxpZF9hcmd1bWVudBVhc3NlcnRfbm9fZHVwbGljYXRpb24Kc2ltcGxlX21hcAZjcmVhdGUJU2ltcGxlTWFwDGNvbnRhaW5zX2tleQNhZGQcY2FuX2NoYW5nZV91cGdyYWRlX3BvbGljeV90bxJmcmVlemVfY29kZV9vYmplY3QGT2JqZWN0Bm9iamVjdA5vYmplY3RfYWRkcmVzcwlub3RfZm91bmQGc2lnbmVyCmFkZHJlc3Nfb2YIaXNfb3duZXIRcGVybWlzc2lvbl9kZW5pZWQGb3B0aW9uBG5vbmUGT3B0aW9uCGl0ZXJfbXV0CVRhYmxlSXRlcgtwcmVwYXJlX211dAhuZXh0X211dBZpbmNyZWFzZV90b3RhbF9tb2R1bGVzDGluaXRfZ2VuZXNpcwNuZXcWc2V0X2FsbG93ZWRfcHVibGlzaGVycwtpbml0X21vZHVsZQdwdWJsaXNoCmJvcnJvd19tdXQFZXZlbnQEZW1pdA9yZXF1ZXN0X3B1Ymxpc2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUY29tcGlsYXRpb25fbWV0YWRhdGEJAAMyLjADMi4wE2luaXRpYTo6bWV0YWRhdGFfdjC+BQkBAAAAAAAAABJFVVBHUkFERV9JTU1VVEFCTEUkQ2Fubm90IHVwZ3JhZGUgYW4gaW1tdXRhYmxlIHBhY2thZ2UuAgAAAAAAAAAWRVVQR1JBREVfV0VBS0VSX1BPTElDWTJDYW5ub3QgZG93bmdyYWRlIGEgcGFja2FnZSdzIHVwZ3JhZGFiaWxpdHkgcG9saWN5LgMAAAAAAAAAG0VVUEdSQURFX1BPTElDWV9VTlNQRUNJRklFRCBVcGdyYWRlIHBvbGljeSBpcyBub3Qgc3BlY2lmaWVkLgQAAAAAAAAAEkVJTlZBTElEX0FSR1VNRU5UUyVUaGUgcHVibGlzaCByZXF1ZXN0IGFyZ3MgYXJlIGludmFsaWQuBQAAAAAAAAAXRUlOVkFMSURfQ0hBSU5fT1BFUkFUT1I5VGhlIG9wZXJhdGlvbiBpcyBleHBlY3RlZCB0byBiZSBleGVjdXRlZCBieSBjaGFpbiBz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CwgLCgIHCAsEY29pbg5CdXJuQ2FwYWJpbGl0eQhtZXRhZGF0YQZPYmplY3QGb2JqZWN0CE1ldGFkYXRhDmZ1bmdpYmxlX2Fzc2V0BENvaW4LZHVtbXlfZmllbGQQQ29pbkNyZWF0ZWRFdmVudA1tZXRhZGF0YV9hZGRyEEZyZWV6ZUNhcGFiaWxpdHkMTWFuYWdpbmdSZWZzCG1pbnRfcmVmB01pbnRSZWYIYnVybl9yZWYHQnVyblJlZgx0cmFuc2Zlcl9yZWYLVHJhbnNmZXJSZWYOTWludENhcGFiaWxpdHkEbmFtZQZTdHJpbmcGc3RyaW5nCHRyYW5zZmVyFnByaW1hcnlfZnVuZ2libGVfc3RvcmUQbWV0YWRhdGFfYWRkcmVzcxFhZGRyZXNzX3RvX29iamVjdAZzeW1ib2wIZGVjaW1hbHMHYmFsYW5jZQRidXJuDUZ1bmdpYmxlQXNzZXQOb2JqZWN0X2FkZHJlc3MHZGVwb3NpdAlpc19mcm96ZW4HbWF4aW11bQZPcHRpb24Gb3B0aW9uBG1pbnQHbWludF90bwxzdWRvX2RlcG9zaXQNc3Vkb190cmFuc2ZlcgpjaGVja19zdWRvBnN1cHBseQh3aXRoZHJhdwVieXRlcxVjcmVhdGVfb2JqZWN0X2FkZHJlc3MIYmFsYW5jZXMGc2lnbmVyCmFkZHJlc3Nfb2YFZXJyb3IRcGVybWlzc2lvbl9kZW5pZWQRZGVub21fdG9fbWV0YWRhdGEGbGVuZ3RoCnN1Yl9zdHJpbmcDaGV4DWRlY29kZV9zdHJpbmcIZnJvbV9iY3MKdG9fYWRkcmVzcxFmcmVlemVfY29pbl9zdG9yZQ9zZXRfZnJvemVuX2ZsYWcKaW5pdGlhbGl6ZSJpbml0aWFsaXplX2FuZF9nZW5lcmF0ZV9leHRlbmRfcmVmCUV4dGVuZFJlZhNjcmVhdGVfbmFtZWRfb2JqZWN0DkNvbnN0cnVjdG9yUmVmK2NyZWF0ZV9wcmltYXJ5X3N0b3JlX2VuYWJsZWRfZnVuZ2libGVfYXNzZXQRZ2VuZXJhdGVfbWludF9yZWYRZ2VuZXJhdGVfYnVybl9yZWYVZ2VuZXJhdGVfdHJhbnNmZXJfcmVmD2dlbmVyYXRlX3NpZ25lchxhZGRyZXNzX2Zyb21fY29uc3RydWN0b3Jf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CwwBCAEGCwUCCAEFBgsPAggBBQoICQcKCAkGBQgJCggJAgYIAwgBAQgIBgYIAwgBBQcIBAgBBwgBCmNvbGxlY3Rpb24JQnVybkV2ZW50CHRva2VuX2lkBlN0cmluZwZzdHJpbmcDbmZ0CU1pbnRFdmVudApNdXRhdG9yUmVmBHNlbGYKQ29sbGVjdGlvbgdjcmVhdG9yC2Rlc2NyaXB0aW9uBG5hbWUDdXJpBG5mdHMFVGFibGUFdGFibGUVQ3JlYXRlQ29sbGVjdGlvbkV2ZW50C0ZpeGVkU3VwcGx5DmN1cnJlbnRfc3VwcGx5Cm1heF9zdXBwbHkMdG90YWxfbWludGVkDU11dGF0aW9uRXZlbnQSbXV0YXRlZF9maWVsZF9uYW1lCW9sZF92YWx1ZQluZXdfdmFsdWULTmZ0UmVzcG9uc2UPVW5saW1pdGVkU3VwcGx5Bk9iamVjdAZvYmplY3QOb2JqZWN0X2FkZHJlc3MFZXJyb3IJbm90X2ZvdW5kBWNvdW50Bk9wdGlvbgZvcHRpb24Ec29tZQRub25lFGdlbmVyYXRlX211dGF0b3JfcmVmDkNvbnN0cnVjdG9yUmVmG29iamVjdF9mcm9tX2NvbnN0cnVjdG9yX3JlZhZhc3NlcnRfY29sbGVjdGlvbl9uYW1lBmxlbmd0aAxvdXRfb2ZfcmFuZ2UEdXRmOAhpbmRleF9vZhBpbnZhbGlkX2FyZ3VtZW50GWNyZWF0ZV9jb2xsZWN0aW9uX2FkZHJlc3MWY3JlYXRlX2NvbGxlY3Rpb25fc2VlZBVjcmVhdGVfb2JqZWN0X2FkZHJlc3MFYnl0ZXMXY3JlYXRlX2ZpeGVkX2NvbGxlY3Rpb24HUm95YWx0eQdyb3lhbHR5E2NyZWF0ZV9uYW1lZF9vYmplY3QPZ2VuZXJhdGVfc2lnbmVyBnNpZ25lcgphZGRyZXNzX29mA25ldwdpc19zb21lDGRlc3Ryb3lfc29tZQVldmVudARlbWl0DGRlc3Ryb3lfbm9uZQdleHRyYWN0BGluaXQbY3JlYXRlX3VubGltaXRlZF9jb2xsZWN0aW9uG2NyZWF0ZV91bnRyYWNrZWRfY29sbGVjdGlvbhZkZWNvbXBvc2VfbmZ0X3Jlc3BvbnNlEGRlY3JlbWVudF9zdXBwbHkGcmVtb3ZlEGluY3JlbWVudF9zdXBwbHkDYWRkBGl0ZXIJVGFibGVJdGVyB3ByZXBhcmUEbmV4dA9zZXRfZGVzY3JpcHRpb24Hc2V0X3VyaQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCgICAToKAgwLZGVzY3JpcHRpb24KAgQDdXJpFGNvbXBpbGF0aW9uX21ldGFkYXRhCQADMi4wAzIuMBNpbml0aWE6Om1ldGFkYXRhX3YwmQUHAQAAAAAAAAAaRUNPTExFQ1RJT05fRE9FU19OT1RfRVhJU1QdVGhlIGNvbGxlY3Rpb24gZG9lcyBub3QgZXhpc3QCAAAAAAAAABtFQ09MTEVDVElPTl9TVVBQTFlfRVhDRUVERURcVGhlIGNvbGxlY3Rpb24gaGFzIHJlYWNoZWQgaXRzIHN1cHBseSBhbmQgbm8gbW9yZSBuZnRzIGNhbiBiZSBtaW50ZWQsIHVubGVzcyBzb21lIGFyZSBidXJuZWQDAAAAAAAAABlFQ09MTEVDVElPTl9OQU1FX1RPT19MT05HLlRoZSBjb2xsZWN0aW9uIG5hbWUgaXMgb3ZlciB0aGUgbWF4aW11bSBsZW5ndGgEAAAAAAAAAA1FVVJJX1RPT19MT05HIlRoZSBVUkkgaXMgb3ZlciB0aGUgbWF4aW11bSBsZW5ndGgFAAAAAAAAABVFREVTQ1JJUFRJT05fVE9PX0xPTkcqVGhlIGRlc2NyaXB0aW9uIGlzIG92ZXIgdGhlIG1heGltdW0gbGVuZ3RoBgAAAAAAAAAaRU1BWF9TVVBQTFlfQ0FOTk9UX0JFX1pFUk8fVGhlIG1heCBzdXBwbHkgbXVzdCBiZSBwb3NpdGl2ZQcAAAAAAAAAGEVJTlZBTElEX0NPTExFQ1RJT05fTkFNRR5UaGUgY29sbGVjdGlvbiBuYW1lIGlzIGludmFsaWQECUJ1cm5FdmVudAEEAAlNaW50RXZlbnQBBAANTXV0YXRpb25FdmVudAEEABVDcmVhdGVDb2xsZWN0aW9uRXZlbnQBBAAGA3VyaQEBAARuYW1lAQEABG5mdHMBAQAFY291bnQBAQAHY3JlYXRvcgEBAAtkZXNjcmlwdGlvbgEBAAACAwAFAggBBQUCAgMABQIIAQUFAwIBCAUEAgUKBQsIAQwIAQ0IAQ4LBQIIAQUGAgMABQoFDAgBBwID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",
        "oRzrCwYAAAALAQAMAgwIAxQoBDwGBUIbB118CNkBIBD5AZYBCo8DCQyYA0AN2AMEAAAABAAHAAgACwANAAEHAAEDBwAAAgABAAAGAwQBBwICAgUBAAMJBgcBAAAKBAMBAAQMCAgABQ4HAwEAAgMDAwYDAQYIAAEGCAEAAQkAAQgAAQgBAQYJAAEKAgEDDGNvcHlhYmxlX2FueQNBbnkJdHlwZV9uYW1lBlN0cmluZwZzdHJpbmcEZGF0YQRwYWNrCXR5cGVfaW5mbwNiY3MIdG9fYnl0ZXMGdW5wYWNrBWVycm9yEGludmFsaWRfYXJndW1lbnQIZnJvbV9iY3MKZnJvbV9ieXRlcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFGNvbXBpbGF0aW9uX21ldGFkYXRhCQADMi4wAzIuMBNpbml0aWE6Om1ldGFkYXRhX3YwYgEAAAAAAAAAAA5FVFlQRV9NSVNNQVRDSEdUaGUgdHlwZSBwcm92aWRlZCBmb3IgYHVucGFja2AgaXMgbm90IHRoZSBzYW1lIGFzIHdhcyBnaXZlbiBmb3IgYHBhY2tgLgAAAAICAggBBQoCAAEAAAIDCwAQAAIBAQAAAgU4AA4AOAESAAIEAQAAAg84AA4AEAAUIQQHBQoGAAAAAAAAAAARBScOABABFDgCAgAAAAEA",
        "oRzrCwcAAAoLAQAOAg4WAySLAQSvAQIFsQHxAweiBe0DCI8JIAavCRoQyQkfCugJEAz4CZoIAAAABAALAA0ADgAeACYAAQMAAQMHAAIKBwEAAQMMCwAFHQgAAAkAAQABBA8CAwABARAEBQABABEGAQABABIHAQABABMIAQABABQKAQABABULAQABABYMAQABABcPAQABABgRAQABABkTAQABABoUAQABABsWAQABABwYAQABAB8ZAQABACAbAQABACEcAQABACIeAQABACMfAQABACQgAQABASUNDgABBiciDQECARYhBAYMCAELAgEIAwMAAQYMAQUBBggBAQYKAgQFCgIGCwIBCAMDCgYMCAELAgEIAwMIAQgBAwMDCAEKBQoCBgsCAQgDAwoCCgIDAwMKAgYKAgoCCgIGCwIBCAMKAgUDBgwLAgEIAwMDBQYLAgEIAwMGBgwFCAEIAQoIAQoKAgEKAgEIAQcFBQoCCgIKCgIKCgIBDQYKCAEKCgIDAwoCCgIFBwoKAgYIAQoCAwoKAgEGBgwFCAEIAQoIAQoIAQ8GCggBCgoCAwMKAgoCBQcKCgIGCAEKAgMKCgIKCgIKCgIBBAYMCgIKCAEKCgIFBQoCCgoCCgoCAQsGCggBCgoCAwMFBwoKAgYIAQoCAwoKAgEEBgwKAgoIAQoIAQ0GCggBCgoCAwMFBwoKAgYIAQoCAwoKAgoKAgoKAgEKBgwIAQsCAQgECggBCAEIAQMDAwgBCgUKAgYLAgEIBAoKAgoCCgIDAwMKAg4GCggBCgoCAwMGCwIBCAQKAgUHCgoCBggBCgIDCgoCCgIKAgkGDAgBCAELAgEIAwMLAgEIAwMLAgEIAwMJBQoCCgIGCwIBCAMDBgsCAQgDAwYLAgEIAwMGBgsCAQgDBgsCAQgDBgsCAQgDCgIKAgUCBgwKAgIFCgIFBgwDCAEDCAEBCAABBgkAAggACgIGY29zbW9zC1ZvdGVSZXF1ZXN0Bl90eXBlXwZTdHJpbmcGc3RyaW5nC3Byb3Bvc2FsX2lkBXZvdGVyBm9wdGlvbghtZXRhZGF0YQhkZWxlZ2F0ZQZPYmplY3QGb2JqZWN0CE1ldGFkYXRhDmZ1bmdpYmxlX2Fzc2V0BnNpZ25lcgphZGRyZXNzX29mBWJ5dGVzEWRlbGVnYXRlX2ludGVybmFsCHRyYW5zZmVy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CyACCAIIAwYIAwgCCggQAQYIGAEGCB0BCxQBCAkBCA0BBggJAggVCAkBCxQBCQEBCA8BCBIBCBMBBwgWBAUFCx8BBQIPAgEGCAAFBQULHwEIAgoIAwsfAQgCCx8BCAIGCwECCAIIAwYLIAIIAggDBggDCAIKCAMBCBgCBggWCx8BBAMLFAEICQMDAwsUAQgJCxQBCBUDAgsUAQgJCxQBCBUMAQgCBQUIDAgMAwMDAwgMCAwCCBEIEQILFAEIFQsUAQgVAQYIDQ4IAgUFAQEIDAgMCAwDAwMDCAwIDAMIEQgRAwkDAwEIDAgMAwgMCAwDAQgdAggMAQEIIQcIDAEIDAgMAwMBCAUGCAkIDAgMBggWCAwDAwEGCBYICAwIDAEKCAwDAwEDAQgZAgYICAMIBQcIFgYIFgMDAQMFBQYMCxQBCAkDAwsfAQMDAwMDDAcIFgsfAQQBAwMGDAsUAQgVCB4IHggMCAwIHgMLFAEICQgeCx8BAwEIGgsFCxQBCBUDBwgWAQMDCAIFBQUFBgwLFAEICQsUAQgVAwsfAQMDCB4IHgEBBggPAQYIAwUFBQUICwgMAwYMCxQBCAkIDAIHCwECCQAJAQkAAQcJAQEIHAUHCAkIDAgMBwgMCAIDCB4LHwEDCx8BAwIIHggeAgQEAgYIBggeAQgEDgUHCAkLHwEEBAcIFgMDCAwDAQgCDAYMCxQBCBcFBgwLFAEICQMLHwEDCx8BAwIICQgVBQMLFAEIFQgeCB4FA2RleAtNb2R1bGVTdG9yZQVwYWlycwVUYWJsZQV0YWJsZQdQYWlyS2V5DFBhaXJSZXNwb25zZQpwYWlyX2NvdW50DVdpdGhkcmF3RXZlbnQGY29pbl9hBmNvaW5fYg9saXF1aWRpdHlfdG9rZW4NY29pbl9hX2Ftb3VudA1jb2luX2JfYW1vdW50CWxpcXVpZGl0eRBDb2luQ2FwYWJpbGl0aWVzCGJ1cm5fY2FwDkJ1cm5DYXBhYmlsaXR5BGNvaW4KZnJlZXplX2NhcBBGcmVlemVDYXBhYmlsaXR5CG1pbnRfY2FwDk1pbnRDYXBhYmlsaXR5BkNvbmZpZwpleHRlbmRfcmVmCUV4dGVuZFJlZgZvYmplY3QHd2VpZ2h0cwdXZWlnaHRzDXN3YXBfZmVlX3JhdGUKQmlnRGVjaW1hbApiaWdkZWNpbWFsDkNvbmZpZ1Jlc3BvbnNlD0NyZWF0ZVBhaXJFdmVudBVDdXJyZW50V2VpZ2h0UmVzcG9uc2UNY29pbl9hX3dlaWdodA1jb2luX2Jfd2VpZ2h0E1BhaXJCeURlbm9tUmVzcG9uc2UGU3RyaW5nBnN0cmluZxFQYWlyRGVub21SZXNwb25zZQxjb2luX2FfZGVub20MY29pbl9iX2Rlbm9tFFBhaXJNZXRhZGF0YVJlc3BvbnNlD2NvaW5fYV9tZXRhZGF0YQZPYmplY3QITWV0YWRhdGEOZnVuZ2libGVfYXNzZXQPY29pbl9iX21ldGFkYXRhBFBvb2wMY29pbl9hX3N0b3JlDUZ1bmdpYmxlU3RvcmUMY29pbl9iX3N0b3JlEFBvb2xJbmZvUmVzcG9uc2ULdG90YWxfc2hhcmUMUHJvdmlkZUV2ZW50F1NpbmdsZUFzc2V0UHJvdmlkZUV2ZW50DHByb3ZpZGVfY29pbg5wcm92aWRlX2Ftb3VudApmZWVfYW1vdW50CVN3YXBFdmVudApvZmZlcl9jb2luC3JldHVybl9jb2luDG9mZmVyX2Ftb3VudA1yZXR1cm5fYW1vdW50ElN3YXBGZWVVcGRhdGVFdmVudAZXZWlnaHQJdGltZXN0YW1wDndlaWdodHNfYmVmb3JlDXdlaWdodHNfYWZ0ZXIEc3dhcA1GdW5naWJsZUFzc2V0BmFtb3VudBNtZXRhZGF0YV9mcm9tX2Fzc2V0Dm9iamVjdF9hZGRyZXNzEWdlbmVyYXRlX3BhaXJfa2V5BWVycm9yEGludmFsaWRfYXJndW1lbnQJcG9vbF9pbmZvD3N3YXBfc2ltdWxhdGlvbh1nZW5lcmF0ZV9zaWduZXJfZm9yX2V4dGVuZGluZwdkZXBvc2l0CHdpdGhkcmF3BWV2ZW50BGVtaXQLaW5pdF9tb2R1bGUDbmV3DmFzc2VydF93ZWlnaHRzA29uZQNhZGQCZXEaY2FsY3VsYXRlX2ZlZV93aXRoX21pbmltdW0PbXVsX2J5X3U2NF9jZWlsKWNhbGN1bGF0ZV9wcm92aWRlX2xpcXVpZGl0eV9yZXR1cm5fYW1vdW50B2JhbGFuY2UGc3VwcGx5Bk9wdGlvbgZvcHRpb24HZXh0cmFjdA5mcm9tX3JhdGlvX3U2NAJndBRtdWxfYnlfdTEyOF90cnVuY2F0ZTZjYWxjdWxhdGVfc2luZ2xlX2Fzc2V0X3Byb3ZpZGVfbGlxdWlkaXR5X3JldHVybl9hbW91bnQPY2hlY2tfbGJwX2VuZGVkDnN0b3JlX21ldGFkYXRhDWludmFsaWRfc3RhdGUKZ2V0X3dlaWdodANkaXYDc3ViE211bF9ieV91NjRfdHJ1bmNhdGUDcG93FmNoZWNrX2NoYWluX3Blcm1pc3Npb24Gc2lnbmVyCmFkZHJlc3Nfb2YRcGVybWlzc2lvbl9kZW5pZWQFYmxvY2sOZ2V0X2Jsb2NrX2luZm8MY29pbl9hZGRyZXNzDmFzc2V0X21ldGFkYXRhFmNyZWF0ZV9sYnBfcGFpcl9zY3JpcHQLY3JlYXRlX3BhaXIEbm9uZQR1dGY4ImluaXRpYWxpemVfYW5kX2dlbmVyYXRlX2V4dGVuZF9yZWYMbWF4X2ZlZV9yYXRlAmxlDHRyYW5zZmVyX3JhdxZwcmltYXJ5X2Z1bmdpYmxlX3N0b3JlFGNyZWF0ZV9wcmltYXJ5X3N0b3JlEWFkZHJlc3NfdG9fb2JqZWN0EXByb3ZpZGVfbGlxdWlkaXR5EmNyZWF0ZV9wYWlyX3NjcmlwdA1nZXRfYWxsX3BhaXJzB2lzX3NvbWUEc29tZQRpdGVyCVRhYmxlSXRlcgdwcmVwYXJlBG5leHQGYm9ycm93FmdldF9hbGxfcGFpcnNfYnlfZGVub20RZGVub21fdG9fbWV0YWRhdGERbWV0YWRhdGFfdG9fZGVub20pZ2V0X2NvaW5fYV9hbW91bnRfZnJvbV9wb29sX2luZm9fcmVzcG9uc2UdZ2V0X2NvaW5fYV93ZWlnaHRfZnJvbV93ZWlnaHQpZ2V0X2NvaW5fYl9hbW91bnRfZnJvbV9wb29sX2luZm9fcmVzcG9uc2UdZ2V0X2NvaW5fYl93ZWlnaHRfZnJvbV93ZWlnaHQKZ2V0X2NvbmZpZxNnZXRfY29uZmlnX2J5X2Rlbm9tB2NvbnZlcnQSZ2V0X2N1cnJlbnRfd2VpZ2h0G2dldF9jdXJyZW50X3dlaWdodF9ieV9kZW5vbQ5nZXRfcGFpcl9kZW5vbRFnZXRfcGFpcl9tZXRhZGF0YQlnZXRfcGFpcnMNZ2V0X3Bvb2xfaW5mbxZnZXRfcG9vbF9pbmZvX2J5X2Rlbm9tFmdldF9wcm92aWRlX3NpbXVsYXRpb24jZ2V0X3NpbmdsZV9hc3NldF9wcm92aWRlX3NpbXVsYXRpb24OZ2V0X3Nwb3RfcHJpY2UKbXVsX2J5X3U2NBdnZXRfc3BvdF9wcmljZV9ieV9kZW5vbSZnZXRfc3dhcF9mZWVfcmF0ZV9mcm9tX2NvbmZpZ19yZXNwb25zZRNnZXRfc3dhcF9zaW11bGF0aW9uHGdldF9zd2FwX3NpbXVsYXRpb25fYnlfZGVub20dZ2V0X3N3YXBfc2ltdWxhdGlvbl9naXZlbl9vdXQZc3dhcF9zaW11bGF0aW9uX2dpdmVuX291dCZnZXRfc3dhcF9zaW11bGF0aW9uX2dpdmVuX291dF9ieV9kZW5vbRlnZXRfdGltZXN0YW1wX2Zyb21fd2VpZ2h0J2dldF90b3RhbF9zaGFyZV9mcm9tX3Bvb2xfaW5mb19yZXNwb25zZQpkaXZfYnlfdTY0JWdldF93ZWlnaHRfYWZ0ZXJfZnJvbV9jb25maWdfcmVzcG9uc2UmZ2V0X3dlaWdodF9iZWZvcmVfZnJvbV9jb25maWdfcmVzcG9uc2UCbG4CZ2UEemVybwdiaWd1aW50CGZyb21fdTY0B0JpZ1VpbnQLZnJvbV9zY2FsZWQDbXVsDXBvb2xfbWV0YWRhdGEHaXNfemVybwJsdAdpc19ub25lBG1pbnQhcHJvdmlkZV9saXF1aWRpdHlfZnJvbV9jb2luX3N0b3JlGHByb3ZpZGVfbGlxdWlkaXR5X3NjcmlwdB5zaW5nbGVfYXNzZXRfcHJvdmlkZV9saXF1aWRpdHklc2luZ2xlX2Fzc2V0X3Byb3ZpZGVfbGlxdWlkaXR5X3NjcmlwdAtzd2FwX3NjcmlwdAx0cnVuY2F0ZV91NjQedW5wYWNrX2N1cnJlbnRfd2VpZ2h0X3Jlc3BvbnNlFHVucGFja19wYWlyX3Jlc3BvbnNlFHVwZGF0ZV9zd2FwX2ZlZV9yYXRlCmJvcnJvd19tdXQSd2l0aGRyYXdfbGlxdWlkaXR5D2Zyb21fcmF0aW9fdTEyOARidXJuGXdpdGhkcmF3X2xpcXVpZGl0eV9zY3JpcHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEKAgEABSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABRjb21waWxhdGlvbl9tZXRhZGF0YQkAAzIuMAMyLjATaW5pdGlhOjptZXRhZGF0YV92MPsMEQIAAAAAAAAAD0VaRVJPX0xJUVVJRElUWR9DYW4gbm90IHdpdGhkcmF3IHplcm8gbGlxdWlkaXR5AwAAAAAAAAALRU1JTl9SRVRVUk4uUmV0dXJuIGFtb3VudCBpcyBzbWFsbGVyIHRoYW4gdGhlIGBtaW5fcmV0dXJuYAQAAAAAAAAADkVNSU5fTElRVUlESVRZQlJldHVybiBsaXF1aWRpdHkgYW1vdW50IGlzIHNtYWxsZXIgdGhhbiB0aGUgYG1pbl9saXF1aWRpdHlfYW1vdW50YAUAAAAAAAAADUVNSU5fV0lUSERSQVdYUmV0dXJuaW5nIGNvaW4gYW1vdW50IG9mIHRoZSByZXN1bHQgb2YgdGhlIGxpcXVpZGl0eSB3aXRoZHJhdyBpcyBzbWFsbGVyIHRoYW4gbWluIHJldHVybgYAAAAAAAAAEkVPVVRfT0ZfQkFTRV9SQU5HRSlCYXNlIG11c3QgYmUgaW4gdGhlIHJhbmdlIG9mIDAgPCBiYXNlIDwgMgcAAAAAAAAADUVVTkFVVEhPUklaRUQXT25seSBjaGFpbiBjYW4gZXhlY3V0ZS4IAAAAAAAAABtFT1VUX09GX1NXQVBfRkVFX1JBVEVfUkFOR0UqRmVlIHJhdGUgbXVzdCBiZSBzbWFsbGVyIHRoYW4gbWF4IGZlZSByYXRlCQAAAAAAAAASRVdFSUdIVFNfVElNRVNUQU1QJ2VuZCB0aW1lIG11c3QgYmUgbGFyZ2VyIHRoYW4gc3RhcnQgdGltZQoAAAAAAAAACkVDT0lOX1RZUEUVV3JvbmcgY29pbiB0eXBlIGdpdmVuCwAAAAAAAAANRVBSSUNFX0lNUEFDVBdFeGNlZWQgbWF4IHByaWNlIGltcGFjdA4AAAAAAAAAEEVMQlBfTk9UX1NUQVJURUQkTEJQIGlzIG5vdCBzdGFydGVkLCBjYW4gbm90IHN3YXAgeWV0DwAAAAAAAAAORUxCUF9OT1RfRU5ERUQjTEJQIGlzIG5vdCBlbmRlZCwgb25seSBzd2FwIGFsbG93ZWQQAAAAAAAAAA9FTEJQX1NUQVJUX1RJTUUvTEJQIHN0YXJ0IHRpbWUgbXVzdCBiZSBsYXJnZXIgdGhhbiBjdXJyZW50IHRpbWURAAAAAAAAAAxFU1RBUlRfQUZURVInQWxsIHN0YXJ0X2FmdGVyIG11c3QgYmUgcHJvdmlkZWQgb3Igbm90EwAAAAAAAAAPRVNBTUVfQ09JTl9UWVBFABQAAAAAAAAAD0VaRVJPX0FNT1VOVF9JTjFaZXJvIGFtb3VudCBpbiB0aGUgc3dhcCBzaW11bGF0aW9uIGlzIG5vdCBhbGxvd2VkFQAAAAAAAAAQRUlOVkFMSURfV0VJR0hUUxdXZWlnaHRzIHN1bSBtdXN0IGJlIDEuMAYJU3dhcEV2ZW50AQQADFByb3ZpZGVFdmVudAEEAA1XaXRoZHJhd0V2ZW50AQQAD0NyZWF0ZVBhaXJFdmVudAEEABJTd2FwRmVlVXBkYXRlRXZlbnQBBAAXU2luZ2xlQXNzZXRQcm92aWRlRXZlbnQBBAATCWdldF9wYWlycwEBAApnZXRfY29uZmlnAQEADWdldF9hbGxfcGFpcnMBAQANZ2V0X3Bvb2xfaW5mbwEBAA5nZXRfcGFpcl9kZW5vbQEBAA5nZXRfc3BvdF9wcmljZQEBABFnZXRfcGFpcl9tZXRhZGF0YQEBABJnZXRfY3VycmVudF93ZWlnaHQBAQATZ2V0X2NvbmZpZ19ieV9kZW5vbQEBABNnZXRfc3dhcF9zaW11bGF0aW9uAQEAFmdldF9hbGxfcGFpcnNfYnlfZGVub20BAQAWZ2V0X3Bvb2xfaW5mb19ieV9kZW5vbQEBABZnZXRfcHJvdmlkZV9zaW11bGF0aW9uAQEAF2dldF9zcG90X3ByaWNlX2J5X2Rlbm9tAQEAG2dldF9jdXJyZW50X3dlaWdodF9ieV9kZW5vbQEBABxnZXRfc3dhcF9zaW11bGF0aW9uX2J5X2Rlbm9tAQEAHWdldF9zd2FwX3NpbXVsYXRpb25fZ2l2ZW5fb3V0AQEAI2dldF9zaW5nbGVfYXNzZXRfcHJvdmlkZV9zaW11bGF0aW9uAQEAJmdldF9zd2FwX3NpbXVsYXRpb25fZ2l2ZW5fb3V0X2J5X2Rlbm9tAQEAAAICAgsBAggCCAMHAwQCBgkFCgULBQwDDQMOAwUCAxAIBhMIBxUICAkCAxgIChsI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bWV0YWRhdGEITWV0YWRhdGEOb2JqZWN0X2FkZHJlc3MFZXJyb3IJbm90X2ZvdW5kFGRpc3BhdGNoYWJsZV9kZXBvc2l0EGRlcG9zaXRfaW50ZXJuYWwocmVnaXN0ZXJfZGVyaXZlX3N1cHBseV9kaXNwYXRjaF9mdW5jdGlvbg5Db25zdHJ1Y3RvclJlZhtyZWdpc3Rlcl9kaXNwYXRjaF9mdW5jdGlvbnMPZ2VuZXJhdGVfc2lnbmVyFWdlbmVyYXRlX3RyYW5zZmVyX3JlZhV3aXRoZHJhd19zYW5pdHlfY2hlY2sad2l0aGRyYXdfZGlzcGF0Y2hfZnVuY3Rpb24HYmFsYW5jZRVkaXNwYXRjaGFibGVfd2l0aGRyYXcHYWJvcnRlZBF3aXRoZHJhd19pbnRlcm5hbA9kZXJpdmVkX2JhbGFuY2UhZGVyaXZlZF9iYWxhbmNlX2Rpc3BhdGNoX2Z1bmN0aW9uHGRpc3BhdGNoYWJsZV9kZXJpdmVkX2JhbGFuY2UOZGVyaXZlZF9zdXBwbHkgZGVyaXZlZF9zdXBwbHlfZGlzcGF0Y2hfZnVuY3Rpb24bZGlzcGF0Y2hhYmxlX2Rlcml2ZWRfc3VwcGx5BnN1cHBseR90cmFuc2Zlcl9hc3NlcnRfbWluaW11bV9kZXBvc2l0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUY29tcGlsYXRpb25fbWV0YWRhdGEJAAMyLjADMi4wE2luaXRpYTo6bWV0YWRhdGFfdjC7AgQBAAAAAAAAABBFU1RPUkVfTk9UX0ZPVU5EOlRyYW5zZmVyUmVmU3RvcmUgZG9lc24ndCBleGlzdCBvbiB0aGUgZnVuZ2libGUgYXNzZXQgdHlwZS4CAAAAAAAAABBFQU1PVU5UX01JU01BVENILlJlY2lwaWVudCBpcyBub3QgZ2V0dGluZyB0aGUgZ3VhcmFudGVlZCB2YWx1ZTsDAAAAAAAAAA5FTk9UX0FDVElWQVRFRCxGZWF0dXJlIGlzIG5vdCBhY3RpdmF0ZWQgeWV0IG9uIHRoZSBuZXR3b3JrLgQAAAAAAAAAC0VOT1RfTE9BREVEHkRpc3BhdGNoIHRhcmdldCBpcyBub3QgbG9hZGVkLgACDmRlcml2ZWRfc3VwcGx5AQEAD2Rlcml2ZWRfYmFsYW5jZQEBAAACAQIIAQABBAEABAkLAAsBCwM4AAwECwILBDgBAgIBAAEAFTAKAAk4AgoAOAMMAw4DOAQEKw4DOAUMBAoEEQcKAAwFCwEMBgsAOAYMCA4IOAcMCQoJKQAEHAUhCwQBBgEAAAAAAAAAEQonCwkrABAADAoLBQsGCwoLBDgIBS8OADgJCwERDAINAQAAAQQLAAsBEQ4CDwEAABkOCgALAQsCCwMREAoAEREMBA4ECwAREhIALQACAQEAAQAeTAkMAwsACgELAzgKCgE4CwwEDgQ4BARFCgE4DA4EOAUMBQoFEQcKAQwGCgIMBwoBOAYMCQ4JOAcMCgoKKQAMAwwLCwMEJAUpCwUBBgEAAAAAAAAAEQonCworABAADAwLBgsHCwwLBTgNCwE4DAwHCwsLBxcMCwsCCwslDAMMDQsDBEEFRAYCAAAAAAAAABEXJwVKDgE4CQsCERgMDQsNAhkBAAAgFQoAOA4MAQ4BOAQEEA4BOAUMAgoCEQcLAAsCOA8MAwUTCwA4DAwDCwMCHAEAACIVCgA4EAwBDgE4BAQQDgE4BQwCCgIRBwsACwI4EQwDBRMLADgSDAMLAwILAAIAGwACAB4AAgAWAAIAIAEEAQAkGQoCOAwLAAsBCwM4AAwFCgILBTgBCwI4DAwDDAYLAwsGFwsEJgQVBRgGAgAAAAAAAAARFycCAAAA",
        "oRzrCwYAAAAKAQAEAgQIAwwtBTk9B3bFAQi7AiAQ2wL8AgrXBQwM4wXTAg22CAQAAAAFAAEHAAADBwAABAABAAEGBgYAAAcAAQAACAIDAAAJCQIAAAoCBAAACwoCAAAMCwEAAA0MAQADCgoCCggACggBAQEBCgIBCAABCAEAAQMFAwMDAwEBAgEGCAABBggBAwoCBggABggBAwoCCgIKAgIKAgoCB2VkMjU1MTkJUHVibGljS2V5BWJ5dGVzCVNpZ25hdHVyZQxiYXRjaF92ZXJpZnkFZXJyb3IQaW52YWxpZF9hcmd1bWVudBViYXRjaF92ZXJpZnlfaW50ZXJuYWwVcHVibGljX2tleV9mcm9tX2J5dGVzE3B1YmxpY19rZXlfdG9fYnl0ZXMUc2lnbmF0dXJlX2Zyb21fYnl0ZXMSc2lnbmF0dXJlX3RvX2J5dGVzBnZlcmlmeQ92ZXJpZnlfaW50ZXJuYWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARRjb21waWxhdGlvbl9tZXRhZGF0YQkAAzIuMAMyLjATaW5pdGlhOjptZXRhZGF0YV92MMcCAwEAAAAAAAAAE0VfV1JPTkdfUFVCS0VZX1NJWkVTV3JvbmcgbnVtYmVyIG9mIGJ5dGVzIHdlcmUgZ2l2ZW4gYXMgaW5wdXQgd2hlbiBkZXNlcmlhbGl6aW5nIGFuIEVkMjU1MTkgcHVibGljIGtleS4CAAAAAAAAABZFX1dST05HX1NJR05BVFVSRV9TSVpFUldyb25nIG51bWJlciBvZiBieXRlcyB3ZXJlIGdpdmVuIGFzIGlucHV0IHdoZW4gZGVzZXJpYWxpemluZyBhbiBFZDI1NTE5IHNpZ25hdHVyZS4DAAAAAAAAABdFX1VOTUFUQ0hFRF9BUkdTX0xFTkdUSEFUaGUgbnVtYmVyIG9mIG1lc3NhZ2VzLCBwdWJsaWMga2V5cywgYW5kIHNpZ25hdHVyZXMgZG8gbm90IG1hdGNoLgAAAAIBAgoCAQIBAgoCAAEAAAdNDgBBAg4BQQMOAkEEBgEAAAAAAAAADAMMBAwFDAYKBgsDIQQeCgULBCEEFAUXBgMAAAAAAAAAEQEnCwUGAAAAAAAAAAAhBB0IAgVICgUGAQAAAAAAAAAhBDEKBgsEIQQnBSoGAwAAAAAAAAAR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AAAAAAAAAAAAAAAAAAAMBQwECgQLBSIEHggMAwUiCwAyAAAAAAAAAAAAAAAAAAAAACEMAwsDBCUFJwYFAAIAAAAAACcKBEr/////////////////////AAAAAAAAAAAAAAAAAAAAACUELAUuBgUAAgAAAAAAJwsENRIAAgIBAAACAwsAEgACDwEAAAkSCwBNMUAvSv////////////////////8AAAAAAAAAAAAAAAAAAAAADAEMAgoCCwElBAwFDgYFAAIAAAAAACcLAjUSAAIQAQAACSIOARAAFDIAAAAAAAAAAAAAAAAAAAAAIgQHBQkGBAABAAAAAAAnDgAQABRNMUAvDgEQABRNGkr/////////////////////AAAAAAAAAAAAAAAAAAAAAAwCDAMKAwsCJQQcBR4GAgACAAAAAAAnCwM1EQICEQEAAAMNCgEyAAAAAAAAAAAAAAAAAAAAACIEBQUHBgQAAQAAAAAAJwsAEQELARoRAgISAQAAAwcLATUMAgsACwIREQITAQAACR8OARAAFDIAAAAAAAAAAAAAAAAAAAAAIgQHBQkGBAABAAAAAAAnCwBNMUAvDgEQABRNGkr/////////////////////AAAAAAAAAAAAAAAAAAAAAAwCDAMKAwsCJQQaBRwGAgACAAAAAAAnCwM1AhQBAAAGEQsANQsBERMy//////////8AAAAAAAAAAAwCDAMKAwsCJQQMBQ4GAgACAAAAAAAnCwM0AhUBAAACCA4AEAAUDgEQABQhAggBAAACBg4AEAAUMUAwAgEBAAACBA4AEAAUAhYBAAACCA4AEAAUDgEQABQkAhcBAAACCA4AEAAUDgEQABQmAhgBAAACCA4AEAAUDgEQABQjAhkBAAACCA4AEAAUDgEQABQlAhoBAAABDw4AEAAUDgEQABQjBAsLAAwCBQ0LAQwCCwICGwEAAAQZCwARAQsBEQEMAk0LAk0YMUAwSv////////////////////8AAAAAAAAAAAAAAAAAAAAADAQMBQoFCwQlBBMFFQYDAAIAAAAAACcLBTURAgIcAQAACRYLAE0OARAAFE0YMUAwSv////////////////////8AAAAAAAAAAAAAAAAAAAAADAIMAwoDCwIlBBEFEwYDAAIAAAAAACcLAzUCHQEAAAYRCwA1CwERHDL//////////wAAAAAAAAAADAIMAwoDCwIlBAwFDgYDAAIAAAAAACcLAzQCHgEAABAdCgARCDFALzIAAAAAAAAAgAAAAAAAAAAADAEMAgoCCwEWDgAQABQMAwwBCwMLASMEGAsCMUAwDAEFGwsAEQcMAQsBAh8BAAAJFgsAEQFNCwFNMUAvDAIMAwoDCgImBA4FEAYGAAEAAAAAACcLAwsCFzURAgIgAQAAAwcLATUMAgsACwIRHwIAAAA=",
        "oRzrCwYAAAAKAQAEAgQEAwhMBFQYBWw9B6kBvwEI6AIgEIgDggEMigTyAQ/8BQQAAAAHAQYHAAABAAEBAAACAAIAAAMABAAABAAAAAAFAAUAAQgGBwABCQcEAAAKAAkAAAsACgAADAALAAANAAwAAA4ADQAADwAOAAAQAA8AABEAEAAAAgAEAAAABQAJAAoACwAMAA0ADgAPABABCgIBCQABBQABAQEIAAEGCAABBgoCAggACAABBAENAQ8BDgEDAQIBCgoCAQoIAAYKCAAGCggAAwMDCggACGZyb21fYmNzCmZyb21fYnl0ZXMKdG9fYWRkcmVzcwd0b19ib29sCHRvX2J5dGVzCXRvX3N0cmluZwZTdHJpbmcGc3RyaW5nBWJ5dGVzE2ludGVybmFsX2NoZWNrX3V0ZjgHdG9fdTEyOAZ0b191MTYHdG9fdTI1NgZ0b191MzIGdG9fdTY0BXRvX3U4D3RvX3ZlY3Rvcl9ieXRlcxB0b192ZWN0b3Jfc3RyaW5nA2FueQxjb3B5YWJsZV9hbnkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARRjb21waWxhdGlvbl9tZXRhZGF0YQkAAzIuMAMyLjATaW5pdGlhOjptZXRhZGF0YV92ME4BAQAAAAAAAAANRUlOVkFMSURfVVRGODRVVEY4IGNoZWNrIGZhaWxlZCBpbiBjb252ZXJzaW9uIGZyb20gYnl0ZXMgdG8gc3RyaW5nAAAAAwIAAQEAAAMDCwA4AAICAQAAAwMLADgBAgMBAAADAwsAOAICBAEAAAgMCwA4AwwBDgERBREGBAgFCgYBAAAAAAAAACcLAQIHAQAAAwMLADgEAggBAAADAwsAOAUCCQEAAAMDCwA4BgIKAQAAAwMLADgHAgsBAAADAwsAOAgCDAEAAAMDCwA4CQINAQAAAwMLADgKAg4BAAARJAsAOAsMAQ4BDAIGAAAAAAAAAAAKAkEFDAMMBAoECgMjBB4KAgoEQgURBREGBBUFGQsCAQYBAAAAAAAAACcLBAYBAAAAAAAAABYMBAUhCwIBBSIFCgsBAgASABMA",
        "oRzrCwYAAAAKAQAGAgYIAw4tBTsrB2bKAgiwAyAQ0AONAgrdBQsM6AVwD9gGBAAAAAUADQABBwABBAcAAAcAAQAACAMCAAAJAAEAAAoEAQAACwMCAAAMBQYAAg4HCAAADwkGAAEQCgQAAgYIAAYIAAEBAAEGCAABBgoCAwYMCAEIAQEIAAEGDAEFAwUIAQgBAQYIAQ1mdW5jdGlvbl9pbmZvDEZ1bmN0aW9uSW5mbw5tb2R1bGVfYWRkcmVzcwttb2R1bGVfbmFtZQZTdHJpbmcGc3RyaW5nDWZ1bmN0aW9uX25hbWUhY2hlY2tfZGlzcGF0Y2hfdHlwZV9jb21wYXRpYmlsaXR5EmxvYWRfZnVuY3Rpb25faW1wbCZjaGVja19kaXNwYXRjaF90eXBlX2NvbXBhdGliaWxpdHlfaW1wbA1pc19pZGVudGlmaWVyGWxvYWRfbW9kdWxlX2Zyb21fZnVuY3Rpb24RbmV3X2Z1bmN0aW9uX2luZm8Gc2lnbmVyCmFkZHJlc3Nfb2YebmV3X2Z1bmN0aW9uX2luZm9fZnJvbV9hZGRyZXNzBWJ5dGVzDmZ1bmdpYmxlX2Fzc2V0G2Rpc3BhdGNoYWJsZV9mdW5naWJsZV9hc3NldAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFGNvbXBpbGF0aW9uX21ldGFkYXRhCQADMi4wAzIuMBNpbml0aWE6Om1ldGFkYXRhX3Yw2AEDAQAAAAAAAAATRUlOVkFMSURfSURFTlRJRklFUiVTdHJpbmcgaXMgbm90IGEgdmFsaWQgTW92ZSBpZGVudGlmaWVyAgAAAAAAAAARRUlOVkFMSURfRlVOQ1RJT04+RnVuY3Rpb24gc3BlY2lmaWVkIGluIHRoZSBGdW5jdGlvbkluZm8gZG9lc24ndCBleGlzdCBvbiBjaGFpbi4DAAAAAAAAAA5FTk9UX0FDVElWQVRFRCJGZWF0dXJlIGhhc24ndCBiZWVuIGFjdGl2YXRlZCB5ZXQuAAAAAgMCBQMIAQYIAQADAAACBgoBEQELAAsBEQICAgACAAMAAgABAAIABAMAAAIDCwARAQIFAQAAAgYLABEGCwELAhEHAgcDAAACEw4BEQgRAwQFBQcGAQAAAAAAAAAnDgIRCBEDBAwFDgYBAAAAAAAAACcLAAsBCwISAAIAEQASAA==",
        "oRzrCwYAAAANAQATAhNgA3OeBASRBVAF4QXnBAfICpgQCOAaIAaAG8IBEMIcixkKzTWeAQzrNuwZDddQKA//UAYAAAAEAA8AEQAdACoAQwBkAIUBAAEGAAEDBwEAAQAFCwAABgYAAAkGAAAKBgAADAgAAg4HAQAAAxAHAAASCAAAFgYAABgAAAAZCAAEHAcAACIGAAAjBgAAJAYAACUIAAAoBgABMAIAAUwGAAdmAwABewYAACkAAQAFKwMDAAAbBAUBCAEsBwgBCAAtBAEBCAEuBAoCCAgACAsDAAAvDA0AATEMBAEIADIPAgEIADMQAQEIADQRAgEIADUSAgEIADYTAQEIADcUAgEIAAIEDgEIATgVFgEIBDkXBQAAOhkaAAE7DBYAATwMGwAEPRwDAAU+AwMAAB4EBQEIAB8EHgEIACAEBQEIACEEBQEIAD8LGgAAGgQDAQgAQAgWAABBHwIAAEIgAgEIBkQGAgECAEUjAgEIAEYEGgEIAEcIFgAASCQBAABJJhoAAEonKAEIAEsqKAEIAU0rGwABTisIAAFPCAQBCAVQAwMABVEDAwAAUi0CAQgAUyUCAABUBC4BCAJVAjABAABWGhYABVcDAwAAWAgWAABZBC4BCABaBC4BCABbAQIAAFwMNQAAXQw2AABeDDcAAl84FgEAAGAaFgAAYSACAQgCYjs8AQABYwQIAQgHZQg9AAdnPhYAAGgEFgEIAGkIFgAHaj4WAABrBBYBCAAnBEABCABsQgIAAG0LGgAAbkQBAABvRxoAAHBIAgEIAHFJAgACKTsGAQAAcksaAABzTAIAAnQ4TQEAA3VOLwADdk8WAAF3DAgABXgDAwAAeVECAAB6UwIAAXxTBAEIAH1VAgEIAH4RAgEIAH8PAgEIAIABBEABCAKBAQYwAQAAggFYGgAAgwFZAgEIAIQBBC4BCAiGAVwIAAGHARUWAQgDBgUJCA4KBgsGDQYOBhAGDwYfDgMOICEiBggpKiktBjAvIDI6Lzo6PTo+KTA6BA48DiBFOgVMBToeTB5PL1YpAykgVkEGWAZbOl0GIFpgBgIHCAsDAQgLAAEDAQsBAQkAAQgNAQkAAQYLAQEJAAEFAgkACAIBCwEBCQEBBggLAQYIEwEIAAEIAgQGDAsBAQkACwEBCQADAwYMCwEBCQADAgsBAQkACAsEBggACwEBCQALAQEJAAMDBggACwEBCQADAwYIAAsBAQkACAsCCwEBCQAFAQEBCgIECAIFAQgCBwYIEwsHAQQIDQgNAggNCA0BCwEBCAIBDAEGCA0FDAYMAggCCBEBAgIGCAQICwILAQEJAAMBCAMCAwsBAQgCAwYIBAsBAQkAAwIFAwIFCAsBBggEAgYIEwsBAQkAAQsBAQgMAQgMAgYIFAsBAQkAAQYIFAMDBQcIEQILAQEJAAEBCwcBCAgBCAgBCwcBCQACBQsHAQgIAQgFBgMLAQEIAgcIDAsBAQgCAwUBBggMAQgEAQgPAQgQAQYLBwEJAAMFBQEBBAEHCwcBCQABBwkAAgEIFQEGCBUCCBUBAQsHAQQCBQsHAQQCBwgLCAsDCwEBCAIDCwEBCAICBggPAwEIDgILAQEIAgMBBggPAwYIDwsBAQkAAwYGCBALBwEIDQsHAQgNCwcBAgsHAQgNCwcBCA0BBwgCAQYIEAIGCBMLBwEICAEGCQADBQgNCA0CBggIBggIBgYLBwEICAgIBggIBggIBggTDAQGCBMLBwEICAsHAQgICwcBCAgIBgsHAQgICAgGCAgGCAgICAgIBggTDAEGCBYECwEBCAwDAwEDBggACwEBCQABAQgKBAUBBQcBAQYIAAMGDAsBAQkAAQEIEgQHCAwLAQEIAgMFAQYMAwsBAQkABQYIDA5mdW5naWJsZV9hc3NldAtUcmFuc2ZlclJlZghtZXRhZGF0YQZPYmplY3QGb2JqZWN0CE1ldGFkYXRhCUJ1cm5FdmVudA1tZXRhZGF0YV9hZGRyBmFtb3VudAdCdXJuUmVmDERlcG9zaXRFdmVudApzdG9yZV9hZGRyDERlcml2ZVN1cHBseRFkaXNwYXRjaF9mdW5jdGlvbgZPcHRpb24Gb3B0aW9uDEZ1bmN0aW9uSW5mbw1mdW5jdGlvbl9pbmZvFURpc3BhdGNoRnVuY3Rpb25TdG9yZRF3aXRoZHJhd19mdW5jdGlvbhBkZXBvc2l0X2Z1bmN0aW9uGGRlcml2ZWRfYmFsYW5jZV9mdW5jdGlvbgtGcm96ZW5FdmVudAZmcm96ZW4NRnVuZ2libGVBc3NldA1GdW5naWJsZVN0b3JlB2JhbGFuY2UEbmFtZQZTdHJpbmcGc3RyaW5nBnN5bWJvbAhkZWNpbWFscwhpY29uX3VyaQtwcm9qZWN0X3VyaQlNaW50RXZlbnQHTWludFJlZhFNdXRhdGVNZXRhZGF0YVJlZgZTdXBwbHkHY3VycmVudAdtYXhpbXVtDVdpdGhkcmF3RXZlbnQHZXh0cmFjdAVlcnJvchBpbnZhbGlkX2FyZ3VtZW50Dm9iamVjdF9hZGRyZXNzBHplcm8HY29udmVydBVnZW5lcmF0ZV90cmFuc2Zlcl9yZWYOQ29uc3RydWN0b3JSZWYbb2JqZWN0X2Zyb21fY29uc3RydWN0b3JfcmVmCHRyYW5zZmVyCHdpdGhkcmF3B2RlcG9zaXQRdHJhbnNmZXJfd2l0aF9yZWYRd2l0aGRyYXdfd2l0aF9yZWYQZGVwb3NpdF93aXRoX3JlZghpc19vd25lcgR1dGY4D2FkZF9mdW5naWJpbGl0eRdjYW5fZ2VuZXJhdGVfZGVsZXRlX3JlZg9nZW5lcmF0ZV9zaWduZXIGbGVuZ3RoDG91dF9vZl9yYW5nZQ5hc3NldF9tZXRhZGF0YQxzdG9yZV9leGlzdHMEYnVybg9kZWNyZWFzZV9zdXBwbHkFZXZlbnQEZW1pdAlidXJuX2Zyb20Oc3RvcmVfbWV0YWRhdGEcaXNfbW9kdWxlX2FjY291bnRfc3RvcmVfYWRkchF3aXRoZHJhd19pbnRlcm5hbBFidXJuX3JlZl9tZXRhZGF0YQxjcmVhdGVfc3RvcmUcY3JlYXRlX3N0b3JlX3dpdGhfZXh0ZW5kX3JlZglFeHRlbmRSZWYdZ2VuZXJhdGVfc2lnbmVyX2Zvcl9leHRlbmRpbmcXYWRkcmVzc19mcm9tX2V4dGVuZF9yZWYRYWRkcmVzc190b19vYmplY3QJbm90X2ZvdW5kDWludmFsaWRfc3RhdGUUZGVwb3NpdF9zYW5pdHlfY2hlY2sQZGVwb3NpdF9pbnRlcm5hbBlkZXBvc2l0X2Rpc3BhdGNoX2Z1bmN0aW9uBG5vbmUdaGFzX2RlcG9zaXRfZGlzcGF0Y2hfZnVuY3Rpb24RcGVybWlzc2lvbl9kZW5pZWQVaXNfYmxvY2tlZF9zdG9yZV9hZGRyIWRlcml2ZWRfYmFsYW5jZV9kaXNwYXRjaF9mdW5jdGlvbiBkZXJpdmVkX3N1cHBseV9kaXNwYXRjaF9mdW5jdGlvbgxkZXN0cm95X3plcm8RZ2VuZXJhdGVfYnVybl9yZWYRZ2VuZXJhdGVfbWludF9yZWYcZ2VuZXJhdGVfbXV0YXRlX21ldGFkYXRhX3JlZgdpc19zb21lHmhhc193aXRoZHJhd19kaXNwYXRjaF9mdW5jdGlvbg9pbmNyZWFzZV9zdXBwbHkKYm9ycm93X211dAVvd25lcgdhY2NvdW50EGdldF9hY2NvdW50X2luZm8LQWNjb3VudEluZm8UaXNfYmxvY2tlZF93aXRoX2luZm8JaXNfZnJvemVuEWlzX2Z1bmdpYmxlX2Fzc2V0G2lzX21vZHVsZV9hY2NvdW50X3dpdGhfaW5mbxVpc19zdG9yZV9kaXNwYXRjaGFibGUFbWVyZ2UTbWV0YWRhdGFfZnJvbV9hc3NldARtaW50EW1pbnRfcmVmX21ldGFkYXRhB21pbnRfdG8PbXV0YXRlX21ldGFkYXRhGG9iamVjdF9mcm9tX21ldGFkYXRhX3JlZihyZWdpc3Rlcl9kZXJpdmVfc3VwcGx5X2Rpc3BhdGNoX2Z1bmN0aW9uBmJvcnJvdx5uZXdfZnVuY3Rpb25faW5mb19mcm9tX2FkZHJlc3MhY2hlY2tfZGlzcGF0Y2hfdHlwZV9jb21wYXRpYmlsaXR5HGFkZHJlc3NfZnJvbV9jb25zdHJ1Y3Rvcl9yZWYOYWxyZWFkeV9leGlzdHMbcmVnaXN0ZXJfZGlzcGF0Y2hfZnVuY3Rpb25zDHJlbW92ZV9zdG9yZQlEZWxldGVSZWYWb2JqZWN0X2Zyb21fZGVsZXRlX3JlZg9zZXRfZnJvemVuX2ZsYWcMc3Vkb19kZXBvc2l0DXN1ZG9fdHJhbnNmZXIGc3VwcGx5BHNvbWUVdHJhbnNmZXJfcmVmX21ldGFkYXRhFXdpdGhkcmF3X3Nhbml0eV9jaGVjaxp3aXRoZHJhd19kaXNwYXRjaF9mdW5jdGlvbgZzaWduZXIKYWRkcmVzc19vZgRvd25zG2Rpc3BhdGNoYWJsZV9mdW5naWJsZV9hc3NldBZwcmltYXJ5X2Z1bmdpYmxlX3N0b3JlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCgIGBXVpbml0CgIFBElOSVQKAhwbZGlzcGF0Y2hhYmxlX2Z1bmdpYmxlX2Fzc2V0CgIcG2Rpc3BhdGNoYWJsZV9kZXJpdmVkX3N1cHBseQoCFhVkaXNwYXRjaGFibGVfd2l0aGRyYXcKAhUUZGlzcGF0Y2hhYmxlX2RlcG9zaXQKAh0cZGlzcGF0Y2hhYmxlX2Rlcml2ZWRfYmFsYW5jZRRjb21waWxhdGlvbl9tZXRhZGF0YQkAAzIuMAMyLjATaW5pdGlhOjptZXRhZGF0YV92MNYYIAIAAAAAAAAAKUVUUkFOU0ZFUl9SRUZfQU5EX0ZVTkdJQkxFX0FTU0VUX01JU01BVENINVRoZSB0cmFuc2ZlciByZWYgYW5kIHRoZSBmdW5naWJsZSBhc3NldCBkbyBub3QgbWF0Y2guAwAAAAAAAAAQRVNUT1JFX0lTX0ZST1pFTkFTdG9yZSBpcyBkaXNhYmxlZCBmcm9tIHNlbmRpbmcgYW5kIHJlY2VpdmluZyB0aGlzIGZ1bmdpYmxlIGFzc2V0LgQAAAAAAAAAFUVJTlNVRkZJQ0lFTlRfQkFMQU5DRS1JbnN1ZmZpY2llbnQgYmFsYW5jZSB0byB3aXRoZHJhdyBvciB0cmFuc2Zlci4FAAAAAAAAABRFTUFYX1NVUFBMWV9FWENFRURFRDFUaGUgZnVuZ2libGUgYXNzZXQncyBzdXBwbHkgaGFzIGV4Y2VlZGVkIG1heGltdW0uBgAAAAAAAAAYRUZVTkdJQkxFX0FTU0VUX01JU01BVENIKUZ1bmdpYmxlIGFzc2V0IGRvIG5vdCBtYXRjaCB3aGVuIG1lcmdpbmcuBwAAAAAAAAAcRU1JTlRfUkVGX0FORF9TVE9SRV9NSVNNQVRDSCxUaGUgbWludCByZWYgYW5kIHRoZSB0aGUgc3RvcmUgZG8gbm90IG1hdGNoLggAAAAAAAAAEEVOT1RfU1RPUkVfT1dORVIhQWNjb3VudCBpcyBub3QgdGhlIHN0b3JlJ3Mgb3duZXIuCQAAAAAAAAAgRVRSQU5TRkVSX1JFRl9BTkRfU1RPUkVfTUlTTUFUQ0gkVHJhbnNmZXIgcmVmIGFuZCBzdG9yZSBkbyBub3QgbWF0Y2guCgAAAAAAAAAcRUJVUk5fUkVGX0FORF9TVE9SRV9NSVNNQVRDSCBCdXJuIHJlZiBhbmQgc3RvcmUgZG8gbm90IG1hdGNoLgsAAAAAAAAAIkVGVU5HSUJMRV9BU1NFVF9BTkRfU1RPUkVfTUlTTUFUQ0gmRnVuZ2libGUgYXNzZXQgYW5kIHN0b3JlIGRvIG5vdCBtYXRjaC4MAAAAAAAAABNFQU1PVU5UX0lTX05PVF9aRVJPKUNhbm5vdCBkZXN0cm95IG5vbi1lbXB0eSBmdW5naWJsZSBhc3NldHMuDQAAAAAAAAAlRUJVUk5fUkVGX0FORF9GVU5HSUJMRV9BU1NFVF9NSVNNQVRDSClCdXJuIHJlZiBhbmQgZnVuZ2libGUgYXNzZXQgZG8gbm90IG1hdGNoLg4AAAAAAAAAFEVCQUxBTkNFX0lTX05PVF9aRVJPN0Nhbm5vdCBkZXN0cm95IGZ1bmdpYmxlIHN0b3JlcyB3aXRoIGEgbm9uLXplcm8gYmFsYW5jZS4PAAAAAAAAAA5FTkFNRV9UT09fTE9ORy9OYW1lIG9mIHRoZSBmdW5naWJsZSBhc3NldCBtZXRhZGF0YSBpcyB0b28gbG9uZxAAAAAAAAAAEEVTWU1CT0xfVE9PX0xPTkcxU3ltYm9sIG9mIHRoZSBmdW5naWJsZSBhc3NldCBtZXRhZGF0YSBpcyB0b28gbG9uZxEAAAAAAAAAE0VERUNJTUFMU19UT09fTEFSR0UiRGVjaW1hbHMgaXMgb3ZlciB0aGUgbWF4aW11bSBvZiAzMhIAAAAAAAAAFEVPQkpFQ1RfSVNfREVMRVRBQkxFOEZ1bmdpYmlsaXR5IGlzIG9ubHkgYXZhaWxhYmxlIGZvciBub24tZGVsZXRhYmxlIG9iamVjdHMuEwAAAAAAAAANRVVSSV9UT09fTE9ORztVUkkgZm9yIHRoZSBpY29uIG9mIHRoZSBmdW5naWJsZSBhc3NldCBtZXRhZGF0YSBpcyB0b28gbG9uZxQAAAAAAAAAEUVTVVBQTFlfVU5ERVJGTE9XSFRoZSBmdW5naWJsZSBhc3NldCdzIHN1cHBseSB3aWxsIGJlIG5lZ2F0aXZlIHdoaWNoIHNob3VsZCBiZSBpbXBvc3NpYmxlLhUAAAAAAAAAEUVTVVBQTFlfTk9UX0ZPVU5EM1N1cHBseSByZXNvdXJjZSBpcyBub3QgZm91bmQgZm9yIGEgbWV0YWRhdGEgb2JqZWN0LhcAAAAAAAAAGUVGVU5HSUJMRV9TVE9SRV9FWElTVEVOQ0UpRmxhZyBmb3IgdGhlIGV4aXN0ZW5jZSBvZiBmdW5naWJsZSBzdG9yZS4YAAAAAAAAABNFTk9UX01FVEFEQVRBX09XTkVSLEFjY291bnQgaXMgbm90IHRoZSBvd25lciBvZiBtZXRhZGF0YSBvYmplY3QuGQAAAAAAAAAlRVdJVEhEUkFXX0ZVTkNUSU9OX1NJR05BVFVSRV9NSVNNQVRDSEdQcm92aWRlZCB3aXRoZHJhdyBmdW5jdGlvbiB0eXBlIGRvZXNuJ3QgbWVldCB0aGUgc2lnbmF0dXJlIHJlcXVpcmVtZW50LhoAAAAAAAAAJEVERVBPU0lUX0ZVTkNUSU9OX1NJR05BVFVSRV9NSVNNQVRDSEZQcm92aWRlZCBkZXBvc2l0IGZ1bmN0aW9uIHR5cGUgZG9lc24ndCBtZWV0IHRoZSBzaWduYXR1cmUgcmVxdWlyZW1lbnQuGwAAAAAAAAAsRURFUklWRURfQkFMQU5DRV9GVU5DVElPTl9TSUdOQVRVUkVfTUlTTUFUQ0hOUHJvdmlkZWQgZGVyaXZlZF9iYWxhbmNlIGZ1bmN0aW9uIHR5cGUgZG9lc24ndCBtZWV0IHRoZSBzaWduYXR1cmUgcmVxdWlyZW1lbnQuHAAAAAAAAAAgRUlOVkFMSURfRElTUEFUQ0hBQkxFX09QRVJBVElPTlO4AUludmFsaWQgd2l0aGRyYXcvZGVwb3NpdCBvbiBkaXNwYXRjaGFibGUgdG9rZW4uIFRoZSBzcGVjaWZpZWQgdG9rZW4gaGFzIGEgZGlzcGF0Y2hhYmxlIGZ1bmN0aW9uIGhvb2suCiBOZWVkIHRvIGludm9rZSBkaXNwYXRjaGFibGVfZnVuZ2libGVfYXNzZXQ6OndpdGhkcmF3L2RlcG9zaXQgdG8gcGVyZm9ybSB0cmFuc2Zlci4dAAAAAAAAABNFQUxSRUFEWV9SRUdJU1RFUkVEOFRyeWluZyB0byByZS1yZWdpc3RlciBkaXNwYXRjaCBob29rIG9uIGEgZnVuZ2libGUgYXNzZXQuHgAAAAAAAAAcRUZVTkdJQkxFX01FVEFEQVRBX0VYSVNURU5DRTFGdW5naWJsZSBtZXRhZGF0YSBkb2VzIG5vdCBleGlzdCBvbiB0aGlzIGFjY291bnQuHwAAAAAAAAAVRUFQVF9OT1RfRElTUEFUQ0hBQkxFJkNhbm5vdCByZWdpc3RlciBkaXNwYXRjaCBob29rIGZvciBBUFQuIQAAAAAAAAArRURFUklWRURfU1VQUExZX0ZVTkNUSU9OX1NJR05BVFVSRV9NSVNNQVRDSE1Qcm92aWRlZCBkZXJpdmVkX3N1cHBseSBmdW5jdGlvbiB0eXBlIGRvZXNuJ3QgbWVldCB0aGUgc2lnbmF0dXJlIHJlcXVpcmVtZW50LlsAAAAAAAAAJ0VDT05OT1RfTUFOSVBVTEFURV9NT0RVTEVfQUNDT1VOVF9TVE9SRStNb2R1bGUgYWNjb3VudCBzdG9yZSBjYW5ub3QgYmUgbWFuaXB1bGF0ZWQuXAAAAAAAAAAiRUNBTk5PVF9ERVBPU0lUX1RPX0JMT0NLRURfQUNDT1VOVC1EZXBvc2l0IHRvIGEgYmxvY2tlZCBhY2NvdW50IGlzIG5vdCBhbGxvd2VkLl8FCUJ1cm5FdmVudAEEAAlNaW50RXZlbnQBBAALRnJvemVuRXZlbnQBBAAMRGVwb3NpdEV2ZW50AQQADVdpdGhkcmF3RXZlbnQBBAAOBG5hbWUBAQAGc3VwcGx5AQEABnN5bWJvbAEBAAdiYWxhbmNlAQEAB21heGltdW0BAQAIZGVjaW1hbHMBAQAIaWNvbl91cmkBAQAIbWV0YWRhdGEBAQAJaXNfZnJvemVuAQEAC3Byb2plY3RfdXJpAQEADHN0b3JlX2V4aXN0cwEBAA5zdG9yZV9tZXRhZGF0YQEBABFpc19mdW5naWJsZV9hc3NldAEBABVpc19zdG9yZV9kaXNwYXRjaGFibGUBAQAAAgECCwEBCAIDAgIHBQgDBAIBAgsBAQgCBQIDCwUHBQgDBgIBDQsHAQgICQIDEwsHAQgIFAsHAQgIFQsHAQgICgIDCwUHBRcBCwICAgsBAQgCCAMMAgMCCwEBCAIaAxcBAgIFGwgNHggNHwIgCA0hCA0OAgIHBQgDDwIBAgsBAQgCEAIBAgsBAQgCEQICJgQnCwcBBBICAwsFBwUIAwABAAACGgoAEAAUCgEmBAcFDAsAAQYEAAAAAAAAABEBJwoAEAAUCgEXCgAPABULABABFAsBEgcCAgEAAQkCBg4AOAArCRACFAIEAQAAAgULADgBBgAAAAAAAAAAEgcCBgEAAAIECwAQABQCBwEAAAIECwA4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CAMLBwEJAAUGCAQDBgwLBwEJAAgLAgYIBggLBAYMCwcBCQAICgUKaW5pdGlhX25mdAlJbml0aWFOZnQIYnVybl9yZWYGT3B0aW9uBm9wdGlvbgdCdXJuUmVmA25mdAttdXRhdG9yX3JlZgpNdXRhdG9yUmVmE0luaXRpYU5mdENvbGxlY3Rpb24KY29sbGVjdGlvbhNyb3lhbHR5X211dGF0b3JfcmVmB3JveWFsdHkTbXV0YWJsZV9kZXNjcmlwdGlvbgttdXRhYmxlX3VyaRdtdXRhYmxlX25mdF9kZXNjcmlwdGlvbg9tdXRhYmxlX25mdF91cmkEYnVybgZPYmplY3QGb2JqZWN0Dm9iamVjdF9hZGRyZXNzBWVycm9yCW5vdF9mb3VuZAZzaWduZXIKYWRkcmVzc19vZgRvd25zEXBlcm1pc3Npb25fZGVuaWVkB2lzX3NvbWUNaW52YWxpZF9zdGF0ZQdleHRyYWN0BG1pbnQGU3RyaW5nBnN0cmluZw9taW50X25mdF9vYmplY3QJRXh0ZW5kUmVmCHRyYW5zZmVyD3NldF9kZXNjcmlwdGlvbhZpc19tdXRhYmxlX2Rlc2NyaXB0aW9uB2NyZWF0b3IGYm9ycm93B3NldF91cmkOaXNfbXV0YWJsZV91cmkRY3JlYXRlX2NvbGxlY3Rpb24KQmlnRGVjaW1hbApiaWdkZWNpbWFsGGNyZWF0ZV9jb2xsZWN0aW9uX29iamVjdAZjcmVhdGUHUm95YWx0eQRzb21lF2NyZWF0ZV9maXhlZF9jb2xsZWN0aW9uDkNvbnN0cnVjdG9yUmVmG2NyZWF0ZV91bmxpbWl0ZWRfY29sbGVjdGlvbg9nZW5lcmF0ZV9zaWduZXIUZ2VuZXJhdGVfbXV0YXRvcl9yZWYEbm9uZRNnZW5lcmF0ZV9leHRlbmRfcmVmG29iamVjdF9mcm9tX2NvbnN0cnVjdG9yX3JlZiFpc19tdXRhYmxlX2NvbGxlY3Rpb25fZGVzY3JpcHRpb24laXNfbXV0YWJsZV9jb2xsZWN0aW9uX25mdF9kZXNjcmlwdGlvbh1pc19tdXRhYmxlX2NvbGxlY3Rpb25fbmZ0X3VyaR1pc19tdXRhYmxlX2NvbGxlY3Rpb25fcm95YWx0eRlpc19tdXRhYmxlX2NvbGxlY3Rpb25fdXJpEWNvbGxlY3Rpb25fb2JqZWN0CkNvbGxlY3Rpb24NbWludF9pbnRlcm5hbBljcmVhdGVfY29sbGVjdGlvbl9hZGRyZXNzEWFkZHJlc3NfdG9fb2JqZWN0B2NvbnZlcnQRZ2VuZXJhdGVfYnVybl9yZWYac2V0X2NvbGxlY3Rpb25fZGVzY3JpcHRpb24Yc2V0X2NvbGxlY3Rpb25fcm95YWx0aWVzBnVwZGF0ZR1zZXRfY29sbGVjdGlvbl9yb3lhbHRpZXNfY2FsbBJzZXRfY29sbGVjdGlvbl91cmkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARRjb21waWxhdGlvbl9tZXRhZGF0YQkAAzIuMAMyLjATaW5pdGlhOjptZXRhZGF0YV92MI4DBgEAAAAAAAAAGkVDT0xMRUNUSU9OX0RPRVNfTk9UX0VYSVNUHVRoZSBjb2xsZWN0aW9uIGRvZXMgbm90IGV4aXN0AgAAAAAAAAATRU5GVF9ET0VTX05PVF9FWElTVBZUaGUgbmZ0IGRvZXMgbm90IGV4aXN0AwAAAAAAAAAMRU5PVF9DUkVBVE9SJlRoZSBwcm92aWRlZCBzaWduZXIgaXMgbm90IHRoZSBjcmVhdG9yBAAAAAAAAAASRUZJRUxEX05PVF9NVVRBQkxFJlRoZSBmaWVsZCBiZWluZyBjaGFuZ2VkIGlzIG5vdCBtdXRhYmxlBQAAAAAAAAAKRU5PVF9PV05FUiRUaGUgcHJvdmlkZWQgc2lnbmVyIGlzIG5vdCB0aGUgb3duZXIGAAAAAAAAAA1FQ0FOX05PVF9CVVJOHlRoZSBORlQgaXMgbm90IGFsbG93ZWQgdG8gYnVybgACDmlzX211dGFibGVfdXJpAQEAFmlzX211dGFibGVfZGVzY3JpcHRpb24BAQAAAgICCwEBCAIHCwEBCAMEAgYHCwEBCAULCwEBCAYNAQ4BDwEQAQABBAEADCsOATgAKQAEBQUKCwABBgIAAAAAAAAAEQInCgEMAgsAEQMMAwsCCwM4AQQUBRcGBQAAAAAAAAARBScOATgALAAMBA4EEAA4AgQgBSMGBgAAAAAAAAARBycLBBMAAQwFDQU4AxEJAgoBBAEBEh0KAAsBCwILAwsECwURCw4GOAQMBQEMBwsFBBoLAAwICwcMCQ0GOAUMCgsI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",
        "",
        "oRzrCwYAAAAMAQAYAhhSA2qNAgT3AjAFpwOwBQfXCPEICMgRIAboEScQjxLrAwr6FckBDMMXzg8NkScoAAAABwAeACEAJQApADMANQA3AD4AQQBPAAECAAEGBwAAEgIAABYHAAAXBgAAGAYAABkGAAAbCAACHQYAAyAEAgMBAAEAIgQABCQHAQAABSgHAgAAAAAAKgYAACsGAAJGAgADVgICAwEAAQAuAAEAAy8DBAIDAAAwBgEAADEICQAAMgsFAAY0DAgABzYNDgEACDgPDwADNgMOAgMACDkPDwADOhARAgMACDsPDwAAPBIOAAAOEw8AAj0UFQAJPxYFAAlAFwUACkIZBQECAEMbBQABRBwdAAJFHh8AAkcgIQACSCAVAAVJBSMCBAQHSiQFAQAFSyUFAgQEA0wFJgIDBABNKQUAAE4rBQALUAUtAANRLg8CAwADSy8FAgMAAFIyBQAAUzU2AARUBTcBAANVODkCAwADVzkOAgMAA1g5OgIDAARZPA4BAAQvPD0BAAFaMyoAAFtABQAAXEMFAAVdRA4CBAQFOkURAgQEAF5HBQAFL0QEAgQEAQIGCAgCCgIRGBciGAgZIhoCESceAh8CETAiDyMCJAIlAiYPJw8RQSsiLCIRSC4iAgUDAQgAAgMICgIGCwkCCQAJAQkAAQYJAQAEBggHBQMGCAoCBggHBggKAQUBCAIFBggHCAMDCgUDAwYMBQMBBgwCBgoJAAYJAAEBAQMCBwsJAgkACQEJAAEHCQEDBggDAwMCBgsMAgUBBgoFAQYICAEMBgYMBQgBCAEKCAEKCgIGBgwFCAEIAQoIAQoIAQEIBgEJAA8FBwgHBwgKBggKBggDAwMMAQoKAgoIAQgBCAEFCggBBgYMCAEKBQMLCwEDCwsBAwEGCAEBBgoCAgYMCgIBCA8BBggPAQgIAgUBAQsMAgkACQEBBwoJAAMHCwwCCQAJAQkACQEBCwkCCQAJAQEIBBMFCgIIDwwLDAIFAQoFCgUDCAMFCAgDAQcLDAIFAQUKBQgDCwkCAwgKCAcHBgwFBQgBCAEKCAEKCgIBCAEJBgwFBQgBCAEKCAEKCgIBCggBAgoIAQECAwMBBgsJAgkACQEDBwsJAgkACQEJAAkBAQgFDwUHCAcFCAEIAQoIAQoKAgMDAgsMAgUBAwMHCwkCAwgKCAoHBgwFBQgBCAEKCAEKCAEBCgICAQoKAgMFCwsBAwIBCggAAQsLAQkABAYLCQIJAAkBCwsBCQALCwEJAAIBBgsQAgkACQECCQAGCQEMAgoIAAYIBwsLAQMGCwkCAwgKBgsQAgMICgEHCggABggKAwgACggAAQYLCwEJAAEGCQAEAQMDARACAwECAQoKAgoIAQgBAwMDCgoCCggBCAEIAQUFBgwKBQMLCwEDCwsBAwEIDQ4FBwgHCwwCBQEKBQoFAwMBBwsMAgUBBQcKBQcDBwgDCAMDBwsMAgUBBQECBgsMAgkACQEGCQACBwsMAgkACQEGCQACBgUHAQQGDAUDAQEIDgcFBwgHBwgKBggKBggDAwMGAwMDBgUBAwhtdWx0aXNpZxBQcm9wb3NhbFJlc3BvbnNlDW11bHRpc2lnX2FkZHILcHJvcG9zYWxfaWQObW9kdWxlX2FkZHJlc3MLbW9kdWxlX25hbWUGU3RyaW5nBnN0cmluZw1mdW5jdGlvbl9uYW1lCXR5cGVfYXJncwRhcmdzD3Byb3Bvc2FsX2hlaWdodBJwcm9wb3NhbF90aW1lc3RhbXAOY29uZmlnX3ZlcnNpb24OeWVzX3ZvdGVfY291bnQGc3RhdHVzB2lzX2pzb24JanNvbl9hcmdzDkNvbmZpZ1Jlc3BvbnNlB21lbWJlcnMJdGhyZXNob2xkEW1heF92b3RpbmdfcGVyaW9kBlBlcmlvZBpDcmVhdGVNdWx0aXNpZ0FjY291bnRFdmVudBNDcmVhdGVQcm9wb3NhbEV2ZW50FEV4ZWN1dGVQcm9wb3NhbEV2ZW50CGV4ZWN1dG9yDk11bHRpc2lnV2FsbGV0CmV4dGVuZF9yZWYJRXh0ZW5kUmVmBm9iamVjdAlwcm9wb3NhbHMFVGFibGUFdGFibGUIUHJvcG9zYWwGaGVpZ2h0Bk9wdGlvbgZvcHRpb24JdGltZXN0YW1wBXZvdGVzCVNpbXBsZU1hcApzaW1wbGVfbWFwEVVwZGF0ZUNvbmZpZ0V2ZW50EVZvdGVQcm9wb3NhbEV2ZW50BXZvdGVyCHZvdGVfeWVzDGdldF9wcm9wb3NhbAZib3Jyb3cdcHJvcG9zYWxfdG9fcHJvcG9zYWxfcmVzcG9uc2UKZ2V0X2NvbmZpZxBleGVjdXRlX3Byb3Bvc2FsBnNpZ25lcgphZGRyZXNzX29mBnZlY3Rvcghjb250YWlucwVlcnJvchFwZXJtaXNzaW9uX2RlbmllZBBpbnZhbGlkX2FyZ3VtZW50CmJvcnJvd19tdXQNaW52YWxpZF9zdGF0ZRNpc19wcm9wb3NhbF9leHBpcmVkHWdlbmVyYXRlX3NpZ25lcl9mb3JfZXh0ZW5kaW5nBmNvc21vcwxtb3ZlX2V4ZWN1dGUWbW92ZV9leGVjdXRlX3dpdGhfanNvbgVldmVudARlbWl0F2NyZWF0ZV9tdWx0aXNpZ19hY2NvdW50BWJ5dGVzE2NyZWF0ZV9uYW1lZF9vYmplY3QOQ29uc3RydWN0b3JSZWYTZ2VuZXJhdGVfZXh0ZW5kX3JlZg9nZW5lcmF0ZV9zaWduZXIGY3JlYXRlB3JldmVyc2UDYWRkA25ldw9jcmVhdGVfcHJvcG9zYWwYY3JlYXRlX3Byb3Bvc2FsX2ludGVybmFsBWJsb2NrDmdldF9ibG9ja19pbmZvBmxlbmd0aBljcmVhdGVfcHJvcG9zYWxfd2l0aF9qc29uDWdldF9wcm9wb3NhbHMEbm9uZQRpdGVyCVRhYmxlSXRlcgdwcmVwYXJlBG5leHQHaXNfc29tZQR1dGY4DXVwZGF0ZV9jb25maWcEdm90ZQxjb250YWluc19rZXkNdm90ZV9wcm9wb3NhbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCgoCIwMQaW4gdm90aW5nIHByZWlvZAhleGVjdXRlZAdleHBpcmVkFGNvbXBpbGF0aW9uX21ldGFkYXRhCQADMi4wAzIuMBNpbml0aWE6Om1ldGFkYXRhX3YwtgMJAQAAAAAAAAASRUlOVkFMSURfVEhSRVNIT0xEAAIAAAAAAAAAC0VOT1RfTUVNQkVSAAMAAAAAAAAAE0VPTERfQ09ORklHX1ZFUlNJT04ABAAAAAAAAAAYRUlOVkFMSURfUFJPUE9TQUxfU1RBVFVTAAUAAAAAAAAAEUVQUk9QT1NBTF9FWFBJUkVEAAYAAAAAAAAAJkVVUERBVEVfQ09ORklHX1BST1BPU0FMX0FMUkVBRFlfRVhJU1RTAAcAAAAAAAAAGEVQUk9QT1NBTF9BTFJFQURZX0VYSVNUUwAIAAAAAAAAAAlFTk9UX1BBU1MACQAAAAAAAAATRVBST1BPU0FMX05PVF9GT1VO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",
        "",
        "oRzrCwYAAAAMAQAUAhQ0A0iWAgTeAh4F/ALTAgfPBeAGCK8MIAbPDCEQ8AyHBgr3Ej0MtBORCg3FHQwAAAAEAAoADgAXABkAGwAiAD0ARwABBgABAwYAAAUGAAAHBgACCQcAAA0IAAEPBwEAAQMQCAAAFAIABBYHAQAABRgLAAEaAgAAFQABAAYcAwQAAx0GBAEIAx4GBwEIAB8ICQABIAoBAAEhBgQBCAcjCwsAACQMAgACJQwLAAcmCwsAAScNDgADKA8CAAQpERIBAAQqExQBAAUrFQIAAB0GBAEIASwXBAEIBy0LCwAALhkCAAEvGgQAATAbAgAFMQQSAAUwBAIAAzIPAgAAMw0ZAAE0DRsAABkGHQEIBTUGHQEIADYGBwEIAzceBAABOAQGAQgAOQ0gAAE6DQYBCAARBgcBCAATBgcBCAASBgcBCAA7IwIAAjwJBwAIPhQCAQIAPyMCAABAJgQAAkEICwAHQgsLAABDBigBCABEKQQAAUUqBAACRgwrAAlILQIBAABJBBIAAEoiLwAASzEyAAIFAwUGBQ0QDhARFBwUEBQdFB8FHAUhIREhJyQwLAYGDAsGAQgHCAQIBAsJAQgKCAQBCAsAAQYMAQUBCAcBCwYBCQABCAQCBggEBggEAQoCAwUFCgIBAwEGCAQBBggLAQwDCwYBCAcIBAUBCAoBBgsJAQkAAQEBBwsJAQkAAQkAAgYICwgKDggECAsGCAsIBAgECwkBCAoIBAwLBgEIBwUIBQYICwgKCAsBBgsGAQkAAgsGAQkABQEIAAEGCAEBCAEECAEFCAQLBgEIBwELCQEICgIFBggEBgsGAQkABQYIBQsJAQgKCwkBCAoIBAEIAgEIBQELBgEIBQIGCAIIBAEIAwYGCAIIBAUHCAUIBAcIBAEGCAAEAwMIBAYIBAELBgEIBwMFBggEBggEAgYFCgIBBgoCAQICBwoJAAoJAAIKAgoCAQgIAwsGAQgFBQYIBQEKCwYBCAUBCggICAMDCggIBwoICAYLBgEIBQgIAwoICANuZnQHQnVyblJlZgpkZWxldGVfcmVmCURlbGV0ZVJlZgZvYmplY3QKTXV0YXRvclJlZgRzZWxmDU11dGF0aW9uRXZlbnQSbXV0YXRlZF9maWVsZF9uYW1lBlN0cmluZwZzdHJpbmcJb2xkX3ZhbHVlCW5ld192YWx1ZQNOZnQKY29sbGVjdGlvbgZPYmplY3QKQ29sbGVjdGlvbgtkZXNjcmlwdGlvbgh0b2tlbl9pZAN1cmkPTmZ0SW5mb1Jlc3BvbnNlBmNyZWF0ZQZPcHRpb24Gb3B0aW9uB1JveWFsdHkHcm95YWx0eQ5Db25zdHJ1Y3RvclJlZgZzaWduZXIKYWRkcmVzc19vZgdjcmVhdG9yBG5hbWUPY3JlYXRlX25mdF9zZWVkEWNyZWF0ZV9uZnRfb2JqZWN0BW93bmVyBWVycm9yD3VuYXV0aGVudGljYXRlZA9hc3NlcnRfdG9rZW5faWQGbGVuZ3RoDG91dF9vZl9yYW5nZQ9nZW5lcmF0ZV9zaWduZXIQaW5jcmVtZW50X3N1cHBseQdpc19zb21lB2V4dHJhY3QEaW5pdA5vYmplY3RfYWRkcmVzcwlub3RfZm91bmQEYnVybhdhZGRyZXNzX2Zyb21fZGVsZXRlX3JlZgZkZWxldGUJZXhpc3RzX2F0EGRlY3JlbWVudF9zdXBwbHkRZ2VuZXJhdGVfYnVybl9yZWYTZ2VuZXJhdGVfZGVsZXRlX3JlZgNnZXQPY29sbGVjdGlvbl9uYW1lGWNyZWF0ZV9jb2xsZWN0aW9uX2FkZHJlc3MRYWRkcmVzc190b19vYmplY3QUZ2VuZXJhdGVfbXV0YXRvcl9yZWYbb2JqZWN0X2Zyb21fY29uc3RydWN0b3JfcmVmD3NldF9kZXNjcmlwdGlvbgR1dGY4BWV2ZW50BGVtaXQHc2V0X3VyaRVhZGRyZXNzX2Zyb21fYnVybl9yZWYIaW5kZXhfb2YQaW52YWxpZF9hcmd1bWVudBFjb2xsZWN0aW9uX29iamVjdBJjcmVhdGVfbmZ0X2FkZHJlc3MVY3JlYXRlX29iamVjdF9hZGRyZXNzBWJ5dGVzBnZlY3RvcgZhcHBlbmQGaXNfbmZ0CG5mdF9pbmZvCW5mdF9pbmZvcwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCgIMC2Rlc2NyaXB0aW9uCgIEA3VyaQoCAgE6CgIDAjo6FGNvbXBpbGF0aW9uX21ldGFkYXRhCQADMi4wAzIuMBNpbml0aWE6Om1ldGFkYXRhX3Yw0gUJAQAAAAAAAAATRU5GVF9ET0VTX05PVF9FWElTVBZUaGUgbmZ0IGRv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cnJvcglub3RfZm91bmQcYWRkcmVzc19mcm9tX2NvbnN0cnVjdG9yX3JlZhdhZGRyZXNzX2Zyb21fZGVsZXRlX3JlZhdhZGRyZXNzX2Zyb21fZXh0ZW5kX3JlZhFhZGRyZXNzX3RvX29iamVjdBdjYW5fZ2VuZXJhdGVfZGVsZXRlX3JlZgdjb252ZXJ0HWNyZWF0ZV9kZWxldGFibGVfbmFtZWRfb2JqZWN0BnNpZ25lcgphZGRyZXNzX29mFWNyZWF0ZV9vYmplY3RfYWRkcmVzcxZjcmVhdGVfb2JqZWN0X2ludGVybmFsGmNyZWF0ZV9ndWlkX29iamVjdF9hZGRyZXNzBGd1aWQJY3JlYXRlX2lkAklEA2Jjcwh0b19ieXRlcwRoYXNoCHNoYTNfMjU2CGZyb21fYmNzCnRvX2FkZHJlc3MTY3JlYXRlX25hbWVkX29iamVjdBFjcmVhdGVfbmZ0X29iamVjdA1jcmVhdGVfb2JqZWN0E3RyYW5zYWN0aW9uX2NvbnRleHQXZ2VuZXJhdGVfdW5pcXVlX2FkZHJlc3MGdmVjdG9yBmFwcGVuZAdhY2NvdW50FWNyZWF0ZV9vYmplY3RfYWNjb3VudA5hbHJlYWR5X2V4aXN0cw1jcmVhdGVfc2lnbmVyBWV2ZW50BGVtaXQaY3JlYXRlX3VzZXJfZGVyaXZlZF9vYmplY3QiY3JlYXRlX3VzZXJfZGVyaXZlZF9vYmplY3RfYWRkcmVzcwZkZWxldGURcGVybWlzc2lvbl9kZW5pZWQYZGlzYWJsZV91bmdhdGVkX3RyYW5zZmVyF2VuYWJsZV91bmdhdGVkX3RyYW5zZmVyE2dlbmVyYXRlX2RlbGV0ZV9yZWYTZ2VuZXJhdGVfZGVyaXZlX3JlZhNnZW5lcmF0ZV9leHRlbmRfcmVmHGdlbmVyYXRlX2xpbmVhcl90cmFuc2Zlcl9yZWYPZ2VuZXJhdGVfc2lnbmVyHWdlbmVyYXRlX3NpZ25lcl9mb3JfZXh0ZW5kaW5nFWdlbmVyYXRlX3RyYW5zZmVyX3JlZglpc19vYmplY3QIaXNfb3duZXIOb2JqZWN0X2FkZHJlc3MNb2JqZWN0X2V4aXN0cxtvYmplY3RfZnJvbV9jb25zdHJ1Y3Rvcl9yZWYWb2JqZWN0X2Zyb21fZGVsZXRlX3JlZgRvd25zDG91dF9vZl9yYW5nZQh0cmFuc2Zlcgx0cmFuc2Zlcl9yYXcNdHJhbnNmZXJfY2FsbB12ZXJpZnlfdW5nYXRlZF9hbmRfZGVzY2VuZGFudBJ0cmFuc2Zlcl90b19vYmplY3QRdHJhbnNmZXJfd2l0aF9yZWYYdW5nYXRlZF90cmFuc2Zlcl9hbGxvd2VkFnByaW1hcnlfZnVuZ2libGVfc3RvcmUDbmZ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUY29tcGlsYXRpb25fbWV0YWRhdGEJAAMyLjADMi4wE2luaXRpYTo6bWV0YWRhdGFfdjD2BQkBAAAAAAAAAA5FT0JKRUNUX0VYSVNUUyhBbiBvYmplY3QgYWxyZWFkeSBleGlzdHMgYXQgdGhpcyBhZGRyZXNzAgAAAAAAAAAWRU9CSkVDVF9ET0VTX05PVF9FWElTVChBbiBvYmplY3QgZG9lcyBub3QgZXhpc3QgYXQgdGhpcyBhZGRyZXNzAwAAAAAAAAAVRU5PX1VOR0FURURfVFJBTlNGRVJTMlRoZSBvYmplY3QgZG9lcyBub3QgaGF2ZSB1bmdhdGVkIHRyYW5zZmVycyBlbmFibGVkBAAAAAAAAAARRU5PVF9PQkpFQ1RfT1dORVIuVGhlIGNhbGxlciBkb2VzIG5vdCBoYXZlIG93bmVyc2hpcCBwZXJtaXNzaW9ucwUAAAAAAAAADkVDQU5OT1RfREVMRVRFJlRoZSBvYmplY3QgZG9lcyBub3QgYWxsb3cgZm9yIGRlbGV0aW9uBgAAAAAAAAAQRU1BWElNVU1fTkVTVElORy9FeGNlZWRzIG1heGltdW0gbmVzdGluZyBmb3IgYW4gb2JqZWN0IHRyYW5zZmVyLgcAAAAAAAAAGEVSRVNPVVJDRV9ET0VTX05PVF9FWElTVDRUaGUgcmVzb3VyY2UgaXMgbm90IHN0b3JlZCBhdCB0aGUgc3BlY2lmaWVkIGFkZHJlc3MuCAAAAAAAAAARRU9CSkVDVF9OT1RfQlVSTlQqQ2Fubm90IHJlY2xhaW0gb2JqZWN0cyB0aGF0IHdlcmVuJ3QgYnVybnQuCQAAAAAAAAARRVZFUlNJT05fTUlTTUFUQ0g7VGhlIHZlcnNpb24gb2YgcmVmIGRvZXMgbm90IG1hdGNoIHdp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CwUBCQADAQgKAgMLBQEIBgMGCAcFAwMGCAcLBQEJAAMFBgwLBQEJAAUDAwUGDAsFAQkACwUBCQADAwMFCwwBBQICCgsFAQgICgMCBgsBAgkACQEJAAEGCQEBCwwBCQAEBgsBAgkACQELDAEJAAsMAQkAAgEGCw0CCQAJAQIJAAYJAQ0CCwwBBQYLAQIFBQYLDQIFBQoLBQEICAoDAQYFBwoLBQEICAsFAQgGCwUBCAgKCwUBCAgKAwEGCwUBCQADBQYIAwEBCA4BBggOAQgPAQYIDwIGCA4LBQEJAAMHCwECCQAJAQkACQECBwsBAgkACQEJAAEHCQEBCAQMBQEGCAMIDgYIDggPBQsFAQgGBwgABQsBAgUFBwsBAgULAQIFBQcGCA4LDAEECBAIEAIIEAgQAQwBCAMDCwUBCAgMARZwcmltYXJ5X2Z1bmdpYmxlX3N0b3JlC01vZHVsZVN0b3JlB2lzc3VlcnMFVGFibGUFdGFibGULdXNlcl9zdG9yZXMMRGVyaXZlUmVmUG9kE21ldGFkYXRhX2Rlcml2ZV9yZWYJRGVyaXZlUmVmBm9iamVjdBhQcmltYXJ5U3RvcmVDcmVhdGVkRXZlbnQKb3duZXJfYWRkcgpzdG9yZV9hZGRyDW1ldGFkYXRhX2FkZHIIdHJhbnNmZXIGT2JqZWN0BnNpZ25lcgphZGRyZXNzX29mG2Vuc3VyZV9wcmltYXJ5X3N0b3JlX2V4aXN0cw1GdW5naWJsZVN0b3JlDmZ1bmdpYmxlX2Fzc2V0G2Rpc3BhdGNoYWJsZV9mdW5naWJsZV9hc3NldAdhY2NvdW50CWV4aXN0c19hdA5jcmVhdGVfYWNjb3VudBF0cmFuc2Zlcl93aXRoX3JlZgtUcmFuc2ZlclJlZhV0cmFuc2Zlcl9yZWZfbWV0YWRhdGEITWV0YWRhdGENcHJpbWFyeV9zdG9yZQtpbml0X21vZHVsZQNuZXcHYmFsYW5jZRRwcmltYXJ5X3N0b3JlX2V4aXN0cwRidXJuB0J1cm5SZWYRYnVybl9yZWZfbWV0YWRhdGEJYnVybl9mcm9tB2RlcG9zaXQNRnVuZ2libGVBc3NldA5hc3NldF9tZXRhZGF0YRBkZXBvc2l0X3dpdGhfcmVmCWlzX2Zyb3plbgRtaW50B01pbnRSZWYRbWludF9yZWZfbWV0YWRhdGEHbWludF90bw9zZXRfZnJvemVuX2ZsYWcMc3Vkb19kZXBvc2l0DXN1ZG9fdHJhbnNmZXIId2l0aGRyYXcEemVybxF3aXRoZHJhd193aXRoX3JlZh90cmFuc2Zlcl9hc3NlcnRfbWluaW11bV9kZXBvc2l0CGJhbGFuY2VzBk9wdGlvbgZvcHRpb24GYm9ycm93BG5vbmUEaXRlcglUYWJsZUl0ZXIHcHJlcGFyZQRuZXh0EWFkZHJlc3NfdG9fb2JqZWN0FGNyZWF0ZV9wcmltYXJ5X3N0b3JlDm9iamVjdF9hZGRyZXNzGmNyZWF0ZV91c2VyX2Rlcml2ZWRfb2JqZWN0DkNvbnN0cnVjdG9yUmVmFWdlbmVyYXRlX3RyYW5zZmVyX3JlZhhkaXNhYmxlX3VuZ2F0ZWRfdHJhbnNmZXIMY3JlYXRlX3N0b3JlHGFkZHJlc3NfZnJvbV9jb25zdHJ1Y3Rvcl9yZWYIY29udGFpbnMDYWRkCmJvcnJvd19tdXQFZXZlbnQEZW1pdCtjcmVhdGVfcHJpbWFyeV9zdG9yZV9lbmFibGVkX2Z1bmdpYmxlX2Fzc2V0BlN0cmluZwZzdHJpbmcPYWRkX2Z1bmdpYmlsaXR5G29iamVjdF9mcm9tX2NvbnN0cnVjdG9yX3JlZg9nZW5lcmF0ZV9zaWduZXITZ2VuZXJhdGVfZGVyaXZlX3JlZgVvd25lcgZpc3N1ZXIVcHJpbWFyeV9zdG9yZV9hZGRyZXNzImNyZWF0ZV91c2VyX2Rlcml2ZWRfb2JqZWN0X2FkZHJlc3MMc3RvcmVfZXhpc3RzBGNvaW4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQUgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUY29tcGlsYXRpb25fbWV0YWRhdGEJAAMyLjADMi4wE2luaXRpYTo6bWV0YWRhdGFfdjCPAQABGFByaW1hcnlTdG9yZUNyZWF0ZWRFdmVudAEEAAcGaXNzdWVyAQEAB2JhbGFuY2UBAQAIYmFsYW5jZXMBAQAJaXNfZnJvemVuAQEADXByaW1hcnlfc3RvcmUBAQAUcHJpbWFyeV9zdG9yZV9leGlzdHMBAQAVcHJpbWFyeV9zdG9yZV9hZGRyZXNzAQEAAAICAgsBAgUF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bWVudAhmcm9tX2Jjcwd0b19ib29sBXRvX3U4BnRvX3UxNgZ0b191MzIGdG9fdTY0B3RvX3UxMjgHdG9fdTI1Ngp0b19hZGRyZXNzCXRvX3N0cmluZwlub3RfZm91bmQKYm9ycm93X211dARpbml0Bmxlbmd0aAZPYmplY3QGb2JqZWN0Dm9iamVjdF9hZGRyZXNzBnJlbW92ZQNhZGQMY29udGFpbnNfa2V5BGJ1cm4UZ2VuZXJhdGVfbXV0YXRvcl9yZWYGc2lnbmVyCmFkZHJlc3Nfb2YJYWRkX3R5cGVkCXR5cGVfaW5mbwl0eXBlX25hbWUDYmNzCHRvX2J5dGVzDXByZXBhcmVfaW5wdXQGY3JlYXRlBnZlY3Rvcghpc19lbXB0eQRyZWFkBmJvcnJvdwxyZWFkX2FkZHJlc3MJcmVhZF9ib29sCnJlYWRfYnl0ZXMLcmVhZF9zdHJpbmcJcmVhZF91MTI4CHJlYWRfdTE2CXJlYWRfdTI1NghyZWFkX3UzMghyZWFkX3U2NAdyZWFkX3U4DHVwZGF0ZV90eXBlZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABCgIFBGJvb2wKAgMCdTgKAgQDdTE2CgIEA3UzMgoCBAN1NjQKAgUEdTEyOAoCBQR1MjU2CgIIB2FkZHJlc3MKAgsKdmVjdG9yPHU4PgoCFBMweDE6OnN0cmluZzo6U3RyaW5nFGNvbXBpbGF0aW9uX21ldGFkYXRhCQADMi4wAzIuMBNpbml0aWE6Om1ldGFkYXRhX3YwswQIAQAAAAAAAAAcRVBST1BFUlRZX01BUF9ET0VTX05PVF9FWElTVB9UaGUgcHJvcGVydHkgbWFwIGRvZXMgbm90IGV4aXN0AgAAAAAAAAAjRUtFWV9BTFJFQURZX0VYSVNUU19JTl9QUk9QRVJUWV9NQVAfVGhlIHByb3BlcnR5IGtleSBhbHJlYWR5IGV4aXN0cwMAAAAAAAAAFEVUT09fTUFOWV9QUk9QRVJUSUVTLFRoZSBudW1iZXIgb2YgcHJvcGVydGllcyBleGNlZWRzIHRoZSBtYXhpbXVtBAAAAAAAAAAZRUtFWV9WQUxVRV9DT1VOVF9NSVNNQVRDSCpQcm9wZXJ0eSBrZXkgYW5kIHZhbHVlIGNvdW50cyBkbyBub3QgbWF0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",
        "oRzrCwYAAAAMAQAKAgogAypjBI0BBgWTAVwH7wG+AgitBCAQzQSBAgrOBg4M3AbdAQ25CAYPvwgCAAAABAAHABMAGwABBgABAwYAAAULAAIGBwABDgIAARkHAQABBBoHAQAAAAkAAQABCgIDAAELAgQAAAwDBgAADQcBAAEPCAQAABAJCgACEQELAAISDAYAAxQNDQAAFQMBAAMWDQ0AAAAOCwAACA4DAAAXDxAAABgREgEIARwUAwEIBB0TFQEABB4BFQEAEBMRChIKAgYIAAgCAAEGCAEBBQEMAgUMAQECBggECAIBBggEAggDBQEIAgEIAwIIAwgDAQMBBggCAQgBAQgAAQsFAQkAAQsGAQgCAQkAAQYLBQEJAAELBgEJAAIFCwYBCAIHcm95YWx0eQpNdXRhdG9yUmVmBWlubmVyCUV4dGVuZFJlZgZvYmplY3QHUm95YWx0eQpCaWdEZWNpbWFsCmJpZ2RlY2ltYWwNcGF5ZWVfYWRkcmVzcwZ1cGRhdGUXYWRkcmVzc19mcm9tX2V4dGVuZF9yZWYdZ2VuZXJhdGVfc2lnbmVyX2Zvcl9leHRlbmRpbmcJZXhpc3RzX2F0BGluaXQOQ29uc3RydWN0b3JSZWYPZ2VuZXJhdGVfc2lnbmVyBmNyZWF0ZQNvbmUCbGUFZXJyb3IMb3V0X29mX3JhbmdlBmRlbGV0ZQlub3RfZm91bmQUZ2VuZXJhdGVfbXV0YXRvcl9yZWYDZ2V0Bk9iamVjdAZPcHRpb24Gb3B0aW9uDm9iamVjdF9hZGRyZXNzBHNvbWUEbm9uZQNuZnQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARRjb21waWxhdGlvbl9tZXRhZGF0YQkAAzIuMAMyLjATaW5pdGlhOjptZXRhZGF0YV92MMwBAwEAAAAAAAAAF0VST1lBTFRZX0RPRVNfTk9UX0VYSVNUFlJveWFsdHkgZG9lcyBub3QgZXhpc3QCAAAAAAAAABhFUk9ZQUxUWV9FWENFRURTX01BWElNVU0nVGhlIHJveWFsdHkgY2Fubm90IGJlIGdyZWF0ZXIgdGhhbiAxMDAlAwAAAAAAAAAcRVJPWUFMVFlfREVOT01JTkFUT1JfSVNfWkVSTyNUaGUgcm95YWx0eSBkZW5vbWluYXRvciBjYW5ub3QgYmUgMAAAAAIBAggBAgICAAgDCAUAAQABAQUTCgAQABEBDAIKAikBBAsLAiwBAQULCwAQABECDAMOAwsBLQECAwEAAAEDCwApAQIEAQAABAcLABEFDAIOAgsBLQECBgEAAAwQCgAMAhEHDAMLAgsDEQgECQUMBgIAAAAAAAAAEQknCwALARIBAgoDAAEBAQsKACkBBAQFBwYBAAAAAAAAABELJwsALAEBAgwBAAABBAsAEAEUAg0BAAABBAsAEAIUAg4BAAABAwsAEgACDwEAAQEWEA4AOAAMAQoBKQEEDAsBKwEUOAEMAgUOOAIMAgsCAgAAAQABAQAfAA==",
        "oRzrCwYAAAALAQAGAgYSAxhNBGUIBW1tB9oBtAMIjgUgEK4FmQEKxwYSDNkGmwMN9AkGAAAABgAQAAEHAAADBwAABAcAAg8HAQAAAAUAAQABBwQEAAAIBQEAAAkHCAAACgkHAAALBwoAAAwHCgAADQsHAAAODA0AABEODwACEhARAQACEwMRAQAAFAwTAAAVBxUAABYWBwAKCgsKCggLCAMKAgYIAAYIAgEBAQIAAQMDCgIKAgoCAgoCCgIBCgIBCAABBggAAQgBAQYIAQMKAgIGCAIBCwMBCAEEAgoCCgIBAgoCAQEJAAELAwEJAAMBCgILAwEIAQELAwEIAAMBCgILAwEIAAEIAgEGCAIJc2VjcDI1NmsxGEVDRFNBQ29tcHJlc3NlZFB1YmxpY0tleQVieXRlcxFFQ0RTQVJhd1B1YmxpY0tleQ5FQ0RTQVNpZ25hdHVyZQZ2ZXJpZnkFZXJyb3IQaW52YWxpZF9hcmd1bWVudA92ZXJpZnlfaW50ZXJuYWwmZWNkc2FfY29tcHJlc3NlZF9wdWJsaWNfa2V5X2Zyb21fYnl0ZXMkZWNkc2FfY29tcHJlc3NlZF9wdWJsaWNfa2V5X3RvX2J5dGVzImVjZHNhX3Jhd19wdWJsaWNfa2V5X2Zyb21fNjRfYnl0ZXMfZWNkc2FfcmF3X3B1YmxpY19rZXlfZnJvbV9ieXRlcx1lY2RzYV9yYXdfcHVibGljX2tleV90b19ieXRlcw1lY2RzYV9yZWNvdmVyBk9wdGlvbgZvcHRpb24bcmVjb3Zlcl9wdWJsaWNfa2V5X2ludGVybmFsBHNvbWUEbm9uZRhlY2RzYV9yZWNvdmVyX2NvbXByZXNzZWQaZWNkc2Ffc2lnbmF0dXJlX2Zyb21fYnl0ZXMYZWNkc2Ffc2lnbmF0dXJlX3RvX2J5dGVzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUY29tcGlsYXRpb25fbWV0YWRhdGEJAAMyLjADMi4wE2luaXRpYTo6bWV0YWRhdGFfdjBlAQEAAAAAAAAADUVfREVTRVJJQUxJWkVLQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgZGVzZXJpYWxpemluZywgZm9yIGV4YW1wbGUgZHVlIHRvIHdyb25nIGlucHV0IHNpemUuAAAAAgECCgIBAgEC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CAwFAgYIAQYIBAQGCAEGCAQIBAoCAwYIAQYIBAkACnNpbXBsZV9uZnQJU2ltcGxlTmZ0FHByb3BlcnR5X211dGF0b3JfcmVmCk11dGF0b3JSZWYMcHJvcGVydHlfbWFwE1NpbXBsZU5mdENvbGxlY3Rpb24WbXV0YWJsZV9uZnRfcHJvcGVydGllcwRidXJuBk9iamVjdAZvYmplY3QOb2JqZWN0X2FkZHJlc3MFZXJyb3IJbm90X2ZvdW5kBnNpZ25lcgphZGRyZXNzX29mBG93bnMRcGVybWlzc2lvbl9kZW5pZWQKaW5pdGlhX25mdARtaW50BlN0cmluZwZzdHJpbmcGT3B0aW9uBm9wdGlvbg9taW50X25mdF9vYmplY3QHaXNfc29tZQdleHRyYWN0CHRyYW5zZmVyD3NldF9kZXNjcmlwdGlvbgdzZXRfdXJpEWNyZWF0ZV9jb2xsZWN0aW9uCkJpZ0RlY2ltYWwKYmlnZGVjaW1hbBhjcmVhdGVfY29sbGVjdGlvbl9vYmplY3QTSW5pdGlhTmZ0Q29sbGVjdGlvbglFeHRlbmRSZWYdZ2VuZXJhdGVfc2lnbmVyX2Zvcl9leHRlbmRpbmcRYWRkcmVzc190b19vYmplY3QhaXNfbXV0YWJsZV9jb2xsZWN0aW9uX2Rlc2NyaXB0aW9uJWlzX211dGFibGVfY29sbGVjdGlvbl9uZnRfZGVzY3JpcHRpb24daXNfbXV0YWJsZV9jb2xsZWN0aW9uX25mdF91cmkdaXNfbXV0YWJsZV9jb2xsZWN0aW9uX3JveWFsdHkZaXNfbXV0YWJsZV9jb2xsZWN0aW9uX3VyaQlJbml0aWFOZnQNcHJlcGFyZV9pbnB1dAtQcm9wZXJ0eU1hcARpbml0FGdlbmVyYXRlX211dGF0b3JfcmVmB2NvbnZlcnQac2V0X2NvbGxlY3Rpb25fZGVzY3JpcHRpb24Yc2V0X2NvbGxlY3Rpb25fcm95YWx0aWVzB1JveWFsdHkHcm95YWx0eR1zZXRfY29sbGVjdGlvbl9yb3lhbHRpZXNfY2FsbAZjcmVhdGUSc2V0X2NvbGxlY3Rpb25fdXJpDGFkZF9wcm9wZXJ0eQNuZnQHY3JlYXRvchZhcmVfcHJvcGVydGllc19tdXRhYmxlA2FkZBJhZGRfdHlwZWRfcHJv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CA4ICwIGCAUIBwMLCAEJAAUGCAQDBgwLCAEJAAgKAgYIBggKBAYMCwgBCQAICQUFBgwLCAEJAAgHCAcKAgQGCAMIBwgHCgIDCwgBCQAFBggABAYMCwgBCQAIBwkBAQkBAwYIAwgHCQACCwgBCA0FAgYIAwYIBwQGCAMGCAcIBwoCAwYIAwYIBwkAAQgPAQYIDwEIEAIIEAUBCAACCAsIDxBzb3VsX2JvdW5kX3Rva2VuDlNvdWxCb3VuZFRva2VuC211dGF0b3JfcmVmBk9wdGlvbgZvcHRpb24KTXV0YXRvclJlZgNuZnQUcHJvcGVydHlfbXV0YXRvcl9yZWYMcHJvcGVydHlfbWFwGFNvdWxCb3VuZFRva2VuQ29sbGVjdGlvbgpjb2xsZWN0aW9uE3JveWFsdHlfbXV0YXRvcl9yZWYHcm95YWx0eRNtdXRhYmxlX2Rlc2NyaXB0aW9uC211dGFibGVfdXJpF211dGFibGVfbmZ0X2Rlc2NyaXB0aW9uEG11dGFibGVfbmZ0X25hbWUWbXV0YWJsZV9uZnRfcHJvcGVydGllcw9tdXRhYmxlX25mdF91cmkEbWludAZTdHJpbmcGc3RyaW5nHG1pbnRfc291bF9ib3VuZF90b2tlbl9vYmplY3QGT2JqZWN0Bm9iamVjdA9zZXRfZGVzY3JpcHRpb24WaXNfbXV0YWJsZV9kZXNjcmlwdGlvbgVlcnJvchFwZXJtaXNzaW9uX2RlbmllZA5vYmplY3RfYWRkcmVzcwlub3RfZm91bmQHY3JlYXRvcgZzaWduZXIKYWRkcmVzc19vZgZib3Jyb3cHc2V0X3VyaQ5pc19tdXRhYmxlX3VyaRFjcmVhdGVfY29sbGVjdGlvbgpCaWdEZWNpbWFsCmJpZ2RlY2ltYWwYY3JlYXRlX2NvbGxlY3Rpb25fb2JqZWN0BmNyZWF0ZQdSb3lhbHR5BHNvbWUXY3JlYXRlX2ZpeGVkX2NvbGxlY3Rpb24OQ29uc3RydWN0b3JSZWYPZ2VuZXJhdGVfc2lnbmVyFGdlbmVyYXRlX211dGF0b3JfcmVmBG5vbmUTZ2VuZXJhdGVfZXh0ZW5kX3JlZglFeHRlbmRSZWYbb2JqZWN0X2Zyb21fY29uc3RydWN0b3JfcmVmIWlzX211dGFibGVfY29sbGVjdGlvbl9kZXNjcmlwdGlvbiVpc19tdXRhYmxlX2NvbGxlY3Rpb25fbmZ0X2Rlc2NyaXB0aW9uHWlzX211dGFibGVfY29sbGVjdGlvbl9uZnRfdXJpHWlzX211dGFibGVfY29sbGVjdGlvbl9yb3lhbHR5B2lzX3NvbWUZaXNfbXV0YWJsZV9jb2xsZWN0aW9uX3VyaRFjb2xsZWN0aW9uX29iamVjdApDb2xsZWN0aW9uDW1pbnRfaW50ZXJuYWwZY3JlYXRlX2NvbGxlY3Rpb25fYWRkcmVzcxFhZGRyZXNzX3RvX29iamVjdAdjb252ZXJ0DXByZXBhcmVfaW5wdXQLUHJvcGVydHlNYXAEaW5pdBpzZXRfY29sbGVjdGlvbl9kZXNjcmlwdGlvbhhzZXRfY29sbGVjdGlvbl9yb3lhbHRpZXMGdXBkYXRlHXNldF9jb2xsZWN0aW9uX3JveWFsdGllc19jYWxsEnNldF9jb2xsZWN0aW9uX3VyaQxhZGRfcHJvcGVydHkWYXJlX3Byb3BlcnRpZXNfbXV0YWJsZQNhZGQSYWRkX3R5cGVkX3Byb3BlcnR5CWFkZF90eXBlZCRpc19tdXRhYmxlX2NvbGxlY3Rpb25fbmZ0X3Byb3BlcnRpZXMPcmVtb3ZlX3Byb3BlcnR5BnJlbW92ZQ91cGRhdGVfcHJvcGVydHkVdXBkYXRlX3R5cGVkX3Byb3BlcnR5DHVwZGF0ZV90eXBlZB5pc19tdXRhYmxlX2NvbGxlY3Rpb25fbmZ0X25hbWUPaXNfbXV0YWJsZV9uYW1lFWdlbmVyYXRlX3RyYW5zZmVyX3JlZgtUcmFuc2ZlclJlZhxnZW5lcmF0ZV9saW5lYXJfdHJhbnNmZXJfcmVmEUxpbmVhclRyYW5zZmVyUmVmEXRyYW5zZmVyX3dpdGhfcmVmGGRpc2FibGVfdW5nYXRlZF90cmFuc2ZlcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABFGNvbXBpbGF0aW9uX21ldGFkYXRhCQADMi4wAzIuMBNpbml0aWE6Om1ldGFkYXRhX3YwnAMFAQAAAAAAAAAaRUNPTExFQ1RJT05fRE9FU19OT1RfRVhJU1QdVGhlIGNvbGxlY3Rpb24gZG9lcyBub3QgZXhpc3QCAAAAAAAAABNFTkZUX0RPRVNfTk9UX0VY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",
        "",
        "",
        "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AAAMBwsACwULBwsDOA8CGwEAAB4eDgE4DAQKDQE4DQwEDgQ4DgwFBQxAHAAAAAAAAAAADAUOAjgMBBYNAjgNDAYOBjgODAcFGEAcAAAAAAAAAAAMBwsACwULBwsDOBACEgACABoAAgAcAAIAHQEAAAMECwA4ETcAAh4AAgAfAAIAIAEAAAMECwA4EjYAAiEBAAADAwsAOBMCIgACACMAAgAkAQAAAwMLADgUAg0AAgAlAQAAJBQKAC4KATgHAwwKAQwDCwALAwsCOAoFEwsACwE4CwwECwILBBUCAAABAQEAAAYBCwILAA==",
        "oRzrCwcAAAoIAQAIAwhEBEwIBVQaB26MAQj6ASAQmgIfDLkCZgAAAAIABAALAAEAAQABAQMDBAEAAQIFAAEAAQAGAAUAAQIHAAUAAQAIAAYAAQIJAAYAAQAKAQAAAQMMBwABAAEADQUAAAEADgYAAAEBAggBCAUIBgEKAgEEAQIBBwoJAAABDwEDAQYJAAIKAgoCCXRhYmxlX2tleQtkZWNvZGVfdTEyOAZ2ZWN0b3IHcmV2ZXJzZQhmcm9tX2Jjcwd0b191MTI4C2RlY29kZV91MjU2B3RvX3UyNTYKZGVjb2RlX3U2NAZ0b191NjQLZW5jb2RlX3UxMjgDYmNzCHRvX2J5dGVzC2VuY29kZV91MjU2CmVuY29kZV91NjQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARRjb21waWxhdGlvbl9tZXRhZGF0YQkAAzIuMAMyLjAAAQAABAUNADgACwARAgIDAQAABAUNADgACwARBAIFAQAABAUNADgACwARBgIHAQAACAcOADgBDAENATgACwECCQEAAAgHDgA4AgwBDQE4AAsBAgoBAAAIBw4AOAMMAQ0BOAALAQIA",
        "oRzrCwYAAAAHAQAEAwQPBRMGBxk8CFUgEHXfAQzUAiEAAAADAAEAAQAAAgABAAEEAAIAAAEDAgMDCXRpbWVzdGFtcBBub3dfbWljcm9zZWNvbmRzC25vd19zZWNvbmRzBWJsb2NrDmdldF9ibG9ja19pbmZvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEUY29tcGlsYXRpb25fbWV0YWRhdGEJAAMyLjADMi4wE2luaXRpYTo6bWV0YWRhdGFfdjCqAQIBAAAAAAAAAA5FTk9UX09QRVJBVElORy9UaGUgYmxvY2tjaGFpbiBpcyBub3QgaW4gYW4gb3BlcmF0aW5nIHN0YXRlIHlldAIAAAAAAAAAEkVJTlZBTElEX1RJTUVTVEFNUCFBbiBpbnZhbGlkIHRpbWVzdGFtcCB3YXMgcHJvdmlkZWQAAgtub3dfc2Vjb25kcwEBABBub3dfbWljcm9zZWNvbmRzAQEAAAEAAAAEEQEGQEIPAAAAAAAYAgEBAAABBRECDAABCwACAA==",
        "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"
      ],
      "modules": [],
      "resources": [],
      "table_infos": [],
      "table_entries": [],
      "dex_pairs": []
    },
    "mstaking": {
      "params": {
        "unbonding_time": "1814400s",
        "max_validators": 100,
        "max_entries": 7,
        "historical_entries": 10000,
        "bond_denoms": [
          "uinit"
        ],
        "min_voting_power": "1000000",
        "min_commission_rate": "0.000000000000000000"
      },
      "last_validator_powers": [],
      "validators": [],
      "delegations": [],
      "unbonding_delegations": [],
      "redelegations": [],
      "exported": false,
      "next_unbonding_id": "1"
    },
    "nonfungibletokentransfer": {
      "port_id": "nft-transfer",
      "class_traces": [],
      "class_data": [],
      "token_data": [],
      "params": {
        "send_enabled": true,
        "receive_enabled": true
      }
    },
    "ophost": {
      "params": {
        "registration_fee": []
      },
      "bridges": [],
      "next_bridge_id": "1"
    },
    "oracle": {
      "currency_pair_genesis": [
        {
          "currency_pair": {
            "Base": "TIMESTAMP",
            "Quote": "NANOSECOND"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "0"
        },
        {
          "currency_pair": {
            "Base": "BNB",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "1"
        },
        {
          "currency_pair": {
            "Base": "BTC",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "2"
        },
        {
          "currency_pair": {
            "Base": "DOGE",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "3"
        },
        {
          "currency_pair": {
            "Base": "EOS",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "4"
        },
        {
          "currency_pair": {
            "Base": "ICP",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "5"
        },
        {
          "currency_pair": {
            "Base": "NTRN",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "6"
        },
        {
          "currency_pair": {
            "Base": "PEPE",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "7"
        },
        {
          "currency_pair": {
            "Base": "SHIB",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "8"
        },
        {
          "currency_pair": {
            "Base": "PYTH",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "9"
        },
        {
          "currency_pair": {
            "Base": "RNDR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "10"
        },
        {
          "currency_pair": {
            "Base": "STRK",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "11"
        },
        {
          "currency_pair": {
            "Base": "ALGO",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "12"
        },
        {
          "currency_pair": {
            "Base": "BCH",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "13"
        },
        {
          "currency_pair": {
            "Base": "DYDX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "14"
        },
        {
          "currency_pair": {
            "Base": "HBAR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "15"
        },
        {
          "currency_pair": {
            "Base": "OP",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "16"
        },
        {
          "currency_pair": {
            "Base": "ORDI",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "17"
        },
        {
          "currency_pair": {
            "Base": "TRX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "18"
        },
        {
          "currency_pair": {
            "Base": "AAVE",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "19"
        },
        {
          "currency_pair": {
            "Base": "BLUR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "20"
        },
        {
          "currency_pair": {
            "Base": "UNI",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "21"
        },
        {
          "currency_pair": {
            "Base": "ARKM",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "22"
        },
        {
          "currency_pair": {
            "Base": "JUP",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "23"
        },
        {
          "currency_pair": {
            "Base": "LDO",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "24"
        },
        {
          "currency_pair": {
            "Base": "WLD",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "25"
        },
        {
          "currency_pair": {
            "Base": "DYM",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "26"
        },
        {
          "currency_pair": {
            "Base": "COMP",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "27"
        },
        {
          "currency_pair": {
            "Base": "DOT",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "28"
        },
        {
          "currency_pair": {
            "Base": "ETC",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "29"
        },
        {
          "currency_pair": {
            "Base": "LINK",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "30"
        },
        {
          "currency_pair": {
            "Base": "USDT",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "31"
        },
        {
          "currency_pair": {
            "Base": "AVAX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "32"
        },
        {
          "currency_pair": {
            "Base": "BONK",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "33"
        },
        {
          "currency_pair": {
            "Base": "CRV",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "34"
        },
        {
          "currency_pair": {
            "Base": "IMX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "35"
        },
        {
          "currency_pair": {
            "Base": "SEI",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "36"
        },
        {
          "currency_pair": {
            "Base": "SUI",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "37"
        },
        {
          "currency_pair": {
            "Base": "GRT",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "38"
        },
        {
          "currency_pair": {
            "Base": "MATIC",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "39"
        },
        {
          "currency_pair": {
            "Base": "FET",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "40"
        },
        {
          "currency_pair": {
            "Base": "LTC",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "41"
        },
        {
          "currency_pair": {
            "Base": "APE",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "42"
        },
        {
          "currency_pair": {
            "Base": "JTO",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "43"
        },
        {
          "currency_pair": {
            "Base": "SNX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "44"
        },
        {
          "currency_pair": {
            "Base": "SOL",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "45"
        },
        {
          "currency_pair": {
            "Base": "AEVO",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "46"
        },
        {
          "currency_pair": {
            "Base": "AGIX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "47"
        },
        {
          "currency_pair": {
            "Base": "FIL",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "48"
        },
        {
          "currency_pair": {
            "Base": "INJ",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "49"
        },
        {
          "currency_pair": {
            "Base": "TIA",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "50"
        },
        {
          "currency_pair": {
            "Base": "WOO",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "51"
        },
        {
          "currency_pair": {
            "Base": "APT",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "52"
        },
        {
          "currency_pair": {
            "Base": "ARB",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "53"
        },
        {
          "currency_pair": {
            "Base": "ATOM",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "54"
        },
        {
          "currency_pair": {
            "Base": "MKR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "55"
        },
        {
          "currency_pair": {
            "Base": "STX",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "56"
        },
        {
          "currency_pair": {
            "Base": "XRP",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "57"
        },
        {
          "currency_pair": {
            "Base": "ASTR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "58"
        },
        {
          "currency_pair": {
            "Base": "ETH",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "59"
        },
        {
          "currency_pair": {
            "Base": "MANA",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "60"
        },
        {
          "currency_pair": {
            "Base": "AXL",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "61"
        },
        {
          "currency_pair": {
            "Base": "NEAR",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "62"
        },
        {
          "currency_pair": {
            "Base": "XLM",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "63"
        },
        {
          "currency_pair": {
            "Base": "ADA",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "64"
        },
        {
          "currency_pair": {
            "Base": "RUNE",
            "Quote": "USD"
          },
          "currency_pair_price": null,
          "nonce": "0",
          "id": "65"
        }
      ],
      "next_id": "66"
    },
    "packetfowardmiddleware": {
      "params": {
        "fee_percentage": "0.000000000000000000"
      },
      "in_flight_packets": {}
    },
    "permissionedchannelrelayer": {
      "channel_states": []
    },
    "ratelimit": {
      "params": {},
      "rate_limits": [],
      "whitelisted_address_pairs": [],
      "blacklisted_denoms": [],
      "pending_send_packet_sequence_numbers": [],
      "hour_epoch": {
        "epoch_number": "0",
        "duration": "3600s",
        "epoch_start_time": "0001-01-01T00:00:00Z",
        "epoch_start_height": "0"
      }
    },
    "reward": {
      "params": {
        "reward_denom": "uinit",
        "dilution_period": "31536000s",
        "release_rate": "0.070000000000000000",
        "dilution_rate": "0.500000000000000000",
        "release_enabled": false
      },
      "last_release_timestamp": "2024-09-26T04:52:59.352095503Z",
      "last_dilution_timestamp": "2024-09-26T04:52:59.352095573Z"
    },
    "slashing": {
      "params": {
        "signed_blocks_window": "100",
        "min_signed_per_window": "0.500000000000000000",
        "downtime_jail_duration": "600s",
        "slash_fraction_double_sign": "0.050000000000000000",
        "slash_fraction_downtime": "0.010000000000000000"
      },
      "signing_infos": [],
      "missed_blocks": []
    },
    "transfer": {
      "port_id": "transfer",
      "denom_traces": [],
      "params": {
        "send_enabled": true,
        "receive_enabled": true
      },
      "total_escrowed": []
    },
    "upgrade": {}
  },
  "consensus": {
    "params": {
      "block": {
        "max_bytes": "22020096",
        "max_gas": "-1"
      },
      "evidence": {
        "max_age_num_blocks": "100000",
        "max_age_duration": "172800000000000",
        "max_bytes": "1048576"
      },
      "validator": {
        "pub_key_types": [
          "ed25519"
        ]
      },
      "version": {
        "app": "0"
      },
      "abci": {
        "vote_extensions_enable_height": "1"
      }
    }
  }
}